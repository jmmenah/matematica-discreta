(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    177636,       4065]
NotebookOptionsPosition[    161865,       3805]
NotebookOutlinePosition[    162346,       3822]
CellTagsIndexPosition[    162303,       3819]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 Cell[BoxData[
  FormBox[GridBox[{
     {
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
PZuw+pt21aySM0OqKt2c1E5IVbMwsPE6PzVaGRg/Fdl0eTamy5AqfoPjN/ul
nhyz2Gb7HX+R9/rN32Nbaki8KDPMv5HPJlSlRlPxwX7akKqSIzdm1Lffw50i
a9HDqeoZ+LkW76T4nk1YnU27KiekYihCqsplexiIUpVU6PCr3/PVq8imy7Mx
tYVUYZIePuS+Vp8wF10+tsz3I18xtvGOv8hbnGaOtaVLUMKOCF/t0X4PM+7w
X8J/X3ofXPzX3z5uf9iFTm7nS2/0W9STLz6fT2319KOmFvt5fR2+18nPfGlj
npUwpArdZl1Th8Pz4dG6/fCPPGzjc6r3b9+FY2faOw8rdMjQOGHHrTvDxO+m
1f05bPnDht1+w6CQaicb90tV1d+0q2ZCKoYipKpfDc8mVSpndXkgbxHZbnk2
ppKQKkwkX8oxwgw6zDFXzNHin4a0Zb4fOcHfeMdfzFR6/kCL3zXhJ2OaLnSJ
+M+Mv+lv9bg9bMzP6+tnY6Lw35/tPy+FQvGhzcXn80Uh/LQxz7bbooTqLmlI
tfQpT6E3hk9+qZOEA3n1Y6PiLxbzf/IL/9P3y8vIXRM2eOmJK/61IEtPXKEb
PNuN72Y7T0wJqXaybnfUWUZrOQmpGIqQqglyKjVaJXlwdDciGy3PxhQPqeKn
+UtHdPF35Wyc74evcPKfb7njL/Jev5n3wUV+wtnyl3LG75TIOfKKcXto25gz
TGifh7HGTCgU+TSqky/gm/Eo4luaUN0lDakWrSYKjROzqeGgXjHOWTTqeymn
itzCR0IXim+HyLsyFy1fDL89skct2tSlnYGllu6ImqvXaVedhFQMRUjVCjmV
GqqWPjy5b5GNlmdjyoZUSyORRXdMn3yK+KLNnpniRd58tDqqjVyXMnOIRV5u
1qUukV8/8onTS8ft4avFr2W6T07mQ6GY5lr0YKKXTGnDioTqLl1IFR9grugh
S5dULR31PTohhP970cPo5j9tvmJ6Xfyz95e+BzP88NI1WkKqnSzaC5VXx9Ou
CgmpGIqQqiFyKjVUGSHfi2yxPBtTMKRaF4ksWpwQOe/bON+PfDby6jv+Nn54
5MBgyxEamUXE7PFF4/YV6Xf4+bC18/8q5lenSt0Ph8O6j0oVUsUHKUsj5cmi
cc6KUd99XLM053lW/Cg6pjPH50grtnzpM05dgncSvwvqr76nXbURUjEUIVVz
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
HHzpmpaYJqptHeMgIdXd5tvfknTa7bfgRYpc7TPzu2I6Rqq/qUVGiDOfELnu
K8kqtcip7lAX2ZxiGr+V6uPU2gohFUMRUg0uYU4VPqe2B+oOZbScarSDPbJZ
Pn34uN82xPex+FOBkOqpmHsqf15fx+yOpTcHReaQVa1jHCekirlPf2btXJJO
G3nrcZ4vO79nV7wrc7XIyeP8h8R8QpJ7uiN3opBqJzGN30r1cWpthZCKoQip
SJJThU+oatoyprRvM6+/Srd3VvEPT95pMVX8Mqrkr5MbLaSKaerQH06et9dd
EHPez5XEOCHVxg6cpNNGzpK2/8UqMhLfuHIs1V/WkoRUMVfwJOsYtz/fjC1i
Gr+V6uPU2gohFUMRUnH3Z061Jd8I/zbJUx3YKOyFnZ4zVmcNtXIv/mUHqZ6y
8kjkGwbPFt5BI6R61qIXur1U6+LKmF+9Ux9bZ5yQKvKOsJf+eZJOG3ki2h5j
Rl7LKgmpkiwwi/yQje9Njn9Dq5BqJ5Ht30T1cWpthZCKoQipmITR77qcSkJV
lfjxZwc11BA6cn46VfLX/MW89O2+Fs37hFTP2v4C1tU5UuSvrufoGyekiunA
Mzf8Jum0kZeYjTFm5COe5vdszpDq/dt3288tkTPQjc/Rir9ru55jvDOR7d9E
9XFqbYWQiqEIqbi3IqeSUFWos6uY4/3eoseOJXzJ5qLAZOnr5IRUL9m4KnJ1
B4i8rzNs3tIHXs37fnm57p7x2kKq1V/kpJgjce8Hp99FT7G3POI7ft3mxu+b
5Obo+L8NzX9O/IB89aEXf9d2ZGdghfhdUH+NNgwrq7PhfenmpHZCKh5alFNJ
qKoVP8Jvump7y9jeFs0vzv6MKbYfoUsHRUsnfUKql2x8FcKWe4IirwKpLgHh
Q6Yvu+7ZhlWFVPdfZI+bkWN63Uw4marTRl5fVi+mil9GNb9nYzpGkkWn8Yfq
/OfEL5dd3Z8X3UcspNpJ/C6ov0y7chJSMRQhFY+EYVLMMEZCVbOlaUa7lXYt
R/2WBhfhOF29qCO07dK0c8W7BYVUG7f22Vq6nu2R+LVz2xfshW72MBNbkVPV
E1I9OjzTzvEj+8PM+qVUnTZ+orSi2Ze+yWVjSHW2+SKy6Bb7k58W/1fCFQvV
lt5ELKTayaK9UHmZduUkpGIoQiqeNT8XruqpuTyrs2vZS7XxEbLNWfds/HA4
L5qIhd8S+s+KX7Ri9YiQakbkg26e1sbHVi/qZqEpVl8OwkT76S9amlNVElI9
e9H89OFjkiVV8dHNTNOl6rSLYplF6zlXvGt4Zs9GHu9b+sbSDT75geGIiP+0
RctWVzzmTki1k6U7ouYy7cqps4F96eakdkIqXvJSTrXujgwyC/OC1TPchmrA
UfSie2Ee1sXn8zBPmUmrwv8UfmD1XWbrghEh1YxFz6t/WNtP0YsGw+GisPQ2
z/Dz8yeo+A+sIaSaP2rCb98Spz8b5T1b8yvoEnbaRReX8MMxSV3814zfs5Ef
Es6NK4LWFRt88jOXroIOW37yDxDhB9a9LXTAy2seK/ZFtWXalZOQiqEIqZjx
7MBbQtWK7S8Iq7/GPOQ3Pq0oTKxCuz2qjY/pXn3/r5Bqxrr7dlfcdPnUijV7
79++C195/gLx6+bm++Vl5CdH5lTFQ6rI4zF86/CToQUilzWGlgxttSgOmu9y
CTvtirlS6JY/rq4epVWhm4X/Et8llu7Z+HAmtHPobzEnsfAzJyPWlyqmbVe8
Z3n6A8SjQ2/jHx3iOwNLrd4jFdaYY7BShFQMRUjFvEenxCSvwiGbFcPdtmrj
s3cateJFnLvWlhe9CanmrdjRW96q9tCiO48e9Ycp+QwtECpMk8P/va7Hxlxx
yoZU60KAqYnCv52a6GFdfD5f9+aLk7fhJ+y08Y/43rvm9+yKv9RM/Tb8w3C6
eFjhP36/vNx44o1p23r+uiSk2knxPZuwTLtyElIxFCEVJ90PmTY+54T8OjvA
n63SbVzGuodT7VEb7/8VUs1bMWNN+MDAGt4TevJOsYIh1cY1jWnrZDiZttNW
8t1P7tmqbnuPbNtKtllItZPiezZhmXblJKRiKJ3NYZ0tdxImStq2UZUMd/er
PV713oQVDxlOXtufUCekmrd0ycrF5/Ptv/Thby/bx2LeHlgqpDocDsUPwEVf
MG2nLd43Ir94PQuTzqInZZVss5BqJ8X3bMIyNchJSMVQhFTQt0qGu/vVyLeg
hmlywfv+krxDQUh10qKHHic/HApmoTEJ1V3RlVQ1BMVn0U+ES95pV98QmrBS
pXN5Kr5ta9hmIdVOiu/ZhGXalZOQiqEIqaB7NUyj9qvBB9JhclpkOhPmxauf
Q/WQkOqk+Pc5hiM9yW98pEgU08rb/Yo/IC7+nQV7dNp1r42L/2pJ9mwli77O
lkzKdt3m8MkxS6wHv7bup3g/TFimXTkJqRiKkAq619l17VGlvb+pUZl38ffL
y1QPPhJSxYicrkYuPVohZ04VftGie3iLv90vchv2qPC94o/EPTrtfhndz+vr
hHt27w4c+YSuRW270zZPK2Azn8F4aL9+mL9Mu3LqbDBfujmpnZAKurfuRfat
lKN+EuYdGVZ0vH/7Lu1DwIRUMSKnwLs+ny3Pmr2Lz+dL888aQqq7P0+zOdc0
vnn1eulrHHfqtHt0jGkdXdo9u2vmk/Dcsus2hxP4dI+2kKqg5J2wYBmA5SSk
YihCKhhBDQ+42K9Kt25FwuRup0flh7nSHnMWIVWMMK88+evCfk/162bs18HC
x/66uVmxSZWEVJPQxzKcbL99+briZttdO22q2dOnDx/vn3SXfM8mz9PuM9Wd
Qqq02/wwARZSFZSwBxYv066chFQMRUgFI+j78emlW7c6YXcnXFX1/u278IGp
7u97REgV6WQ0lG1GGXrCj6urhFHV1MFWb09VIdXkcDh8v7xMvm4nfOC6eGqy
d6eNvIls5ts9+u077dlfNzfbe2/4vQ8XLu4XUk02hsNPE2AhVUGpTgg1lGlX
TkIqhiKkghEsfZF9W7XrXU7tCpPZMKRZnVaFfxgm2tvf3zdPSBXp5JvUkjzH
fpEw7f325evquXP4h+Gfbz94Kwyp7oVvFw6ijYnxm1evLz6fbw+K83Ta8JXD
bl0U0IWeELr302+3655dsZ1n/5ITPu20e4dUk9AHlsaA4eefTYCFVAVtORvU
VqZdOQmpGIqQCgZR9hVUu5aQal6Y/YUmCsObMNUNJ8lnU4Uw+Qr/U/iB8GO/
bm52Wjf11PQ4l/lKFb9M7XCyatvsyI1P+LuWCt90esx16EKhnp34Tx0sVPix
8MMJGyd81Ml9sXfWGiNsxo+rq/tWeince9RQCbc8c6edzjnhizx76Qn//duX
r6FBZr5gnj07bWfYmJd2yv2JceYoS3huOSn8rtAxvl9ePrvBU/8J/+t8qpn/
DMa94kOmhGXalZOQiqEIqWAQJ1ditFtb7hUCAMij+JApYZl25SSkYihCKhhE
zLOXGy13JQAA9Ss+ZEpYpl05CakYipAKxrHHC7hrKCEVAFC/4kOmhGXalZOQ
iqEIqWAcF5/Pix+ke1T4XqWbFgDghOJDpoRl2pWTkIqhCKlgHJ1d4Bz4AEBD
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
374r3cabdHxJEpsXMeCjqO5LSAUAtKjjZ4A8LTlV9zP0hzX4vr6b3d1jJngd
ByD31fozuvt+dlDTd2K2aKhL3tMSUgEAjer49oqnNWxOFb71UH9Q9gSYk7Oz
0ebLfacf99X6Mrnun5TY+g5qyOAJ1ZmQCgBo1iBzt/v69OHjaM/THvChHIMP
ziNnZxefzwfJbAc5y7V+r9+keDPuWm9evR7koCtLQnU2/HUQAGjaaC++Cd93
nMHbgC826mOqvtqi2dmnDx+7X9rx4+qqeJ/MU63f6zfpfnGvh1PtasA/yrxU
44xzAID+jPColqcVpq6lG353gywgGXDPvmTF+oE3r1533GJDLajoY43oP/74
o3hL7l3uR97J79tbCdV9CakAgHYN9fj0h9Xx7U6jPYTqvka+m2ZLINPfsRC+
Tvdrch5WN+tzwsy6eGNmKDlVcr9ubkZbNjxf/YVU//f/9//+N//+f+ivSrcr
AFRqqPUGDyuMacPItnTzJzbyWL2PO55W2H4Ihz7TzVv/wuxstEOgm3131/tj
qe5LTpXK8Xgcc0H4fAmpWqnS7QoAlRrkj9cv1cXn8z7ulAnfYswFVPfVx35c
JO2qub//9W9NP6VqzOlqZwsIx1kC198Kxvzc4vdSCalaqdLtCgD1Gmde8GyF
Wd4//vij3flC2PKw/aOtHnlUA65M2Okpwd8vL1s8Fn7d3Lx/+654P9TzNxrn
WfdnQ75wNpXpqld8D1ZbQqpWqnS7AkC9Bl9MNVWY4bZ410zY5sHjqalGm+vt
+h6rtmLbcPoaOWbvrOf/vr0t3qQ5a6gXzqYSWmzMRDq++utUQioAGNDIs7yH
FYa+TUzPrZ56WJ0tJjkpz5vW64+qBo+nzv68Q7P0TkhvwPyh0eWL+f2+vR38
kI8sIVUrVbpdAaBqFlM9rDA9//bla53P5wlbFbZNPPWwOltMMi9PQvWwajsW
Qgv8vL72LJqzHqeiwYAPFjv78+8jXe7NVMJJftiXvKyo/vqSkAoAxuQPlE8r
TIR/XF3VkIGEbQhbMuAag5M11DKq/AnVfU3HQtn1Hr9ubiS09xXOBgX3xX5G
u+PvYYXuXcPlpiriqRUlpGqlSrcrANTOYqqZCjP075eX+Qd+4TeG3yubmqlx
5nQFE6qHdfH5PGdyO62bkk09rRafoRdp5DNe/bfZZvPr5sbfztaVkKqVKt2u
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
E3pgzqNgymPDL7o/BKSytG7Kfru80/zRwRsuXj+vr5u4bE0Pq+ysmmh5AAD2
cDwewxD3vlYMJh/+89LfBtaY8qupplWIiypM2+//ebXLLSC537e34XiZMqum
H2P1/u27KU92CAMAAAC0bvqTx7RYMcN63dX15tXrsHnfLy+nJY5SKQAAAIDu
3S/WnZYdfvvydboZPMPKq4e33N4v+i3dHgAAAADU6NEt59P7DrbcdW5lFAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABAu/5/TiyIkw==
         "], {{0, 493}, {1591, 0}}, {0, 
         255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSize->{228.19999999999538`, Automatic},
       ImageSizeRaw->{1591, 493},
       PlotRange->{{0, 1591}, {0, 493}}], 
      RowBox[{"  ", GridBox[{
         {
          StyleBox[
           RowBox[{
            RowBox[{
            "M\[EAcute]todos", " ", "Computacionales", " ", "en", " ", 
             "\[CapitalAAcute]lgebra", " ", "para", " ", 
             "Inform\[AAcute]ticos"}], "\n", 
            RowBox[{
            "Matem\[AAcute]tica", " ", "Discreta", " ", "y", " ", 
             "L\[OAcute]gica"}]}],
           FontFamily->"Georgia",
           FontSize->18]},
         {
          StyleBox[
           RowBox[{
            RowBox[{"Dpto", ".", " ", "de"}], " ", 
            RowBox[{"Matem\[AAcute]ticas", ".", " ", "\[CapitalAAcute]rea"}], 
            " ", "de", "  ", "\[CapitalAAcute]lgebra", "  ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"M", ".", " ", "A", ".", " ", "Garc\[IAcute]a"}], ",", 
              " ", 
              RowBox[{"C", ".", " ", "Ord\[OAcute]\[NTilde]ez"}], ",", " ", 
              RowBox[{"J", ".", " ", "F", ".", " ", "Ruiz"}]}], ")"}]}],
           FontFamily->"Century Gothic",
           FontSize->12,
           FontWeight->"Plain"]}
        }], "       "}]}
    }], TraditionalForm]],ExpressionUUID->
  "0d2f150a-8ab1-454c-9bef-4ae1b9404065"],
 "    "
}], "Department",
 CellBracketOptions->{"OverlapContent"->False},
 SpeechNavigationOptions->{"Delete"->False,
 "Input"->False,
 "Motion"->False,
 "Output"->False,
 "Paste"->False,
 "Select"->False},
 CellChangeTimes->{{3.761377047762638*^9, 3.761377078270383*^9}, {
   3.7613796622242455`*^9, 3.7613796901699257`*^9}, 3.7613797318976583`*^9, {
   3.761394229763237*^9, 3.761394267690406*^9}, {3.7613943384284525`*^9, 
   3.7613943478069887`*^9}, {3.761394460126413*^9, 3.761394461543494*^9}, {
   3.7613945139354906`*^9, 3.7613945139354906`*^9}, {3.7613945729838676`*^9, 
   3.7613946088709207`*^9}, {3.7613946772318306`*^9, 
   3.7613947050434213`*^9}, {3.7613949331924706`*^9, 
   3.7613949331924706`*^9}, {3.761395054008381*^9, 3.761395058495638*^9}, {
   3.7613953120401397`*^9, 3.7613953435249405`*^9}, {3.761395472058292*^9, 
   3.7613956025277543`*^9}, {3.7613956456982236`*^9, 3.761395699601307*^9}, {
   3.761455343788207*^9, 3.761455349866555*^9}, {3.7614556083703403`*^9, 
   3.761455609786422*^9}, {3.761455776540654*^9, 3.761455776540654*^9}, {
   3.761456674965943*^9, 3.7614566894257755`*^9}, {3.761456810725843*^9, 
   3.761456811681445*^9}, {3.7614569069220476`*^9, 3.7614569112594585`*^9}, {
   3.7614570049716644`*^9, 3.761457016161091*^9}, {3.7614570589699926`*^9, 
   3.7614570605695963`*^9}, {3.761457096596078*^9, 3.7614571239511375`*^9}},
 FontColor->GrayLevel[1],
 Background->RGBColor[
  0.3333333333333333, 0.33725490196078434`, 
   0.17254901960784313`],ExpressionUUID->"e379467b-1a1c-49b6-807b-\
d096f97c8da7"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztndvrdtt11+Phwkv/Be/9A7z10tsWLwUbjKEiKU2LUgRBBBFEEEEEobTU
Y7HUSj0GS6VSKm3TmJikJj2kbWxMjKlpmzZtTPyZz/tj+q699hyHOcac6/A8
4wsjO+/e77Oe9aw15neOOY5/7L3f8S1//g++5z3v+a4/8s3/+ZZv+8t/8oMf
/Lbv+dY/+s0//OkPfNe3v/8D7/tzf+oD3/2+97/vg3/ivX/om//yj/+BV/nD
3/z/L4VCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgU
CoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQqFQKBQKhUKhUCgUCoVC
oVAoFAqFQqFQKBQKhUKhUCgUCoVCoVAoFAqFQuGy+Po3/u/Lx3/9N19++Od+
/eVHP/o/Xj762S+/fPl3vzbluh/5tS+/ue6//tjrdX/rq/9nwh0XCgUvvvSV
33/5iU9/8eX7fvJXXv7mv/3Uy9/4N//tFOG7f+CnfvXlpz/zGy+/8/tfD/+e
v/fjv/TyZ773Z94h7/3+D7/8tR/9pPjd8A98NPu6Ufk7/+EXXj735a+Gn4EF
3vd3//OPvZG/+2O/+PLvPv75KZzuAc/5n/70Z1++9z99ZulvtPDVr33jzf7z
gz/z2Ze/9e8/fZreI//gJz7z5p2wFgt9fPG3f+/Nc/qz3/ez71qHZ8v7/+HP
vbFjRnkLrot+J5+V8GM//z8Pfwbf+YMfy75iEd/zwx9/1/ehB+jDSt6Cq/72
hz79/7/zfT/w4ZdPff63l31fD/AUuoWOna3n0jv4/G/+3qHP5OrAnkBXzn4/
lvyFf/yRN3ugB7zjjA6yz/aADXDWs1oF7TvZ51cBvdt/31/9l580bdtZwE/w
Hf/so6frtSXw1o985HOHPJOrA5/O2e9j9N15OKu3FkaEfb8Hzqhn/fZV4Awr
fecqvsKukXj/s7/xu0u+cwu46g579FakPfRZkF3TZwl+IvRNA75v/l70O9h3
e2AtnXVmXgXt3PzJz/3Wku+EB6Xv5Ly9Epw5M7pxpjyrnYW/6m77y1b+0g/9
V/PcgO848x2S74ZYwBm/eSX+0X/+tXd9H5z9ta9/Y8n3ce6Tfif+pFVAZ3r+
ursIe+Uz+rPw45397LNinVU+9IkvpK4vnTuz143KauAbaHsY60KLOYwC3vvl
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
9yNxked+0WXOn1p8wNODEXCdfc9VYqjYotwvNh6cK90v/55cjpH8PP7uiO2Q
mY+Drpytrx6Bo2bNcSo8Jjinwc/auo/y1RY9XzF2CTlaIzoKN6Dbnj5yHvtK
As9Eut8zenhk5uMUCo8AbIaR/ugZvur50rb2vwfsvyP36/FfSdBqas6oowTR
+TiFwt0xUmM6g6969koTT02I9nlNovMmNH49q0eAFBs6cwZGobAa+DMidRGZ
dcqZT8qxwmeuITPXS8u/0oA/SHpGWox1JaLzcQqFOyPaUyprV+DD6nGAlQMQ
7SOMaPntFqR4qZVLtgrYivvcrZE+7oXCHUE8DO458jzYQPx1m0eEbWXlABBj
5O9FbMJs7yjyDbZ2ITliZ8bZt+fiTM/RwvWBnrFe2JOw92fZ0VyXfRy/J74Y
1ghxJM4xnL2uIvtcSH4/MXVi8dw/eQbkEPXObXBMtg9TAzFJ+lqRPzESG+Rz
3AP5lTxfr++d37h9DqM9zYjN8XzwaV1hphectX8XcD76hm6zH2XmLkrgXY3E
IbkPYhOsCdYGXI/Nyr1H9PfZch32tVvs1/gisjm0d8rHg5M8gBvgt8ZzV/SR
WPlimlyl5/Us7Gu/OTei27PmQsIxrVcQfjTLxoTXsrO598J3P1O+u1aPG50/
wnvM9PQ5Q65gI8yApz+DJI/WB1yrLcz2YenVhVqzWlf1sX6mnjJa76GI/q7Y
Q44QT5+lO0DqdeARq0/V3aDxVWYWGOjVquEzkGpCvbMjIhKN994R+Gmk5xCZ
r4dNnIldnSUzeuxeAfu64Wfk7Aat9jPDV5wnpetKfRO0z2QEjlzhl7sq4Bep
Hy3vOwKrRviKcqUZixlEZ1GwxzxaLS3+RWnvzOQ8EGeQnqPmA1zRPyBrJ94R
bc769jnQtyDau5Az4d38V4+yXnv9qzyCnf2III6534/hjcy71vrN43eXoPFc
RFhjZ86qOhvoLDW+xOmzc4s9tcJXE09/uKuDdTjS25r41qPFBffgmZDvgU6S
R5DNAdDqyrV93uqlNiL4iKtn3ytmnIe1fPH9zJMmXl9x61/gFXKg8U9ZM/CO
nPOzQrARebbEt/d97KizY39nH9o+G8uGZq2Tw8R5ueXSjQi2iDZXQwK+NO6X
++5dF/2K1EFmdRt7zdoPqCnv3bMnDsW78+j0M/msjkBk5onVz6hJJn+G776j
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
TsGWIg9XwlYH+Xs8Sz5L3gP31bPBeUZ7u4r9h32Oz5P7FOkH0UN7p+26vefE
/medZQsyOCdsdXv2zNJZmF1/EeWrBk/tGn8H3eXeiUu19dSbj43gz2DdRddO
dr7L0fsRXNK7D2wpy4/fy8FEj4k7aHwg9T3EB4o9FrXDtHfK+X2ln+9Z0PPP
WDNEzkA2Z2EFX23Pq5JIa87K34zwBvZGJjfsjJpmzZ/O+9ag9XbTzttWf6Go
7Wi901UxqmeCVCdwxhxwDbPnqM/4rR57T6oj4d9r/BvZL6yaD0uyMYAI8Ddr
96RBy8/Qcjuwn7Tc2Wh9rfVOn6ludwUk+/Us3dWwIhaf5Svr7GX1aO/N3WkS
OTtIZyuvePtCz4bkj7Sen/Z7rbilxu2Z2g3tna6qCXkWaL15ZvRZnAn8Pivy
CjJ8RRxAuy4+bw3s8718yExvvIwdelZ/S86xvbirhz+lfpTW2Ytn38v3hzsz
fnfpuvy7s3Mp7gieJzEW3rNWX3I1vgIef9GRfIV9ql0X3bfWDX6qrR+G80Rm
PqZWW2jJmf4VOGtrZ8Hj3jpkYn3bvczbI5T3t69XndEjnOtudZV3Wr1DfYDT
qVvA18K68Na8wmXWdbGpm56gX7x7/MvSnJWMPQzPWn332KNZr3AxNTr4cq3e
ogi+jujsGM/z5L7QX9YV66Hnm+Ja/D7Lx8FagFek+4nGULk/af/nbMp6mz13
Z99zg+8nhopfqsX3+CfvE38A+UoSh/HviWtjk7XfgS6yF/HctVwR9gf0psVG
0DX0hs9yP9HYU3unlWflh2cWuySa/Rq97mg9BHrGO/fkaUp9AmbleM6U0Zo7
dB+7YVaPBfYZesGwTiWbApuH9Z+pddKEWKaVh7SfR8fv5zlYuWq9Hnnsweit
Zbf1ZmSy159VJ/0s2PYVjYhkD2Wu653nib6NzsqSetKf1d9OE6+PCrtmZl8F
7CjOoNpeRJwLTjii77Jme1jxNu2zml0NT2rQfIBnxSQeHewh2T5Nvfr37HU9
Pl1i3BE7QtLfbJx/hXjir9iisznDiptxNjrSHtXsK3RN+/2arc7ZUPteDVp9
+53mZ98N2ZwlyQ8dva7Vnwlo/Rkska49MqPkKLH4Ch/VCvtGO4das41ni2fG
gmYba7XCUj8ZxPLNarkzZV+tQ3adSvNmo9f1zK+Nzi/WcrNn9AKeLRZfreqt
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
/wHPGG2E
     "], {{0, 300.}, {300., 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Comments" -> 
       Association[
        "Creation Time" -> 
         DateObject[{2020, 10, 6, 12, 46, 49.0832219`9.443507918275541}, 
           "Instant", "Gregorian", 2.]]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{120.75, Automatic},
   ImageSizeRaw->{300., 300.},
   PlotRange->{{0, 300.}, {0, 300.}}]],ExpressionUUID->
  "e813ef50-84a4-4ed7-b45a-02d5dd58f57c"],
 "  ",
 Cell[BoxData[{
  FormBox[
   StyleBox[
    RowBox[{"Cap\[IAcute]tulo", " ", "6"}],
    FontFamily->"Times New Roman",
    FontWeight->"Bold"], TraditionalForm], "\n", 
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"L\[OAcute]gica", " ", "proposicional", " ", 
      RowBox[{"II", ":", "Tautolog\[IAcute]as"}]}], ",", " ", 
     "contradicciones", ",", 
     RowBox[{"formas", " ", "normales"}], ",", " ", 
     RowBox[{"conjuntos", " ", "adecuados", " ", "de", " ", "conectivas"}], 
     ",", " ", 
     RowBox[{
     "equivalencias", " ", "e", " ", "implicaciones", " ", "l\[OAcute]gicas", 
      " ", "y", " ", "argumentaciones"}]}],
    FontFamily->"Times New Roman",
    FontWeight->"Bold"], TraditionalForm]}],
  FontSize->30,
  FontColor->RGBColor[0.25098039215686274`, 0., 0.],ExpressionUUID->
  "55b23a60-276f-484f-86a7-d527b6420842"]
}], "Title",
 CellChangeTimes->{{3.7613951594594126`*^9, 3.761395172100136*^9}, {
  3.7613959728659363`*^9, 3.7613959801923556`*^9}, {3.7613960522854795`*^9, 
  3.7613960522854795`*^9}, {3.7613961086007004`*^9, 3.7613961145570407`*^9}, {
  3.7614557819044642`*^9, 3.7614557819044642`*^9}, {3.761456661141508*^9, 
  3.7614566714567337`*^9}, {3.7614570785698385`*^9, 3.7614570785698385`*^9}, {
  3.7616288164872074`*^9, 3.7616288361383314`*^9}, {3.7616289475967064`*^9, 
  3.7616290409060435`*^9}, {3.762062596292263*^9, 3.7620625975870657`*^9}, {
  3.8109700090988464`*^9, 3.8109700090988464`*^9}},
 FontSize->36,
 FontColor->RGBColor[
  0.5019607843137255, 0.25098039215686274`, 0.25098039215686274`],
 Background->RGBColor[
  0.8705882352941177, 0.8745098039215686, 
   0.7490196078431373],ExpressionUUID->"95ee4d40-3972-4ecb-8c7a-b989827ae643"],

Cell[CellGroupData[{

Cell["1. Tautolog\[IAcute]a y contradicci\[OAcute]n", "Section",
 CellChangeTimes->{{3.7616290667045193`*^9, 3.7616290847555513`*^9}},
 FontSize->18,
 FontColor->RGBColor[
  0.5686274509803921, 0., 
   0.],ExpressionUUID->"71705946-d136-4852-9b6b-10d6775b1668"],

Cell[CellGroupData[{

Cell["Ejemplo 6.1.", "Subsection",
 FontSize->16,ExpressionUUID->"fef6c420-4ce0-4b4f-84c4-821f2a508ff0"],

Cell[TextData[{
 "Comprobar si la forma enunciativa: A: (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "9301a39d-0310-42b0-ab38-c3c08d75f058"],
 Cell[BoxData[
  FormBox["\[Vee]", TraditionalForm]],ExpressionUUID->
  "ffc15438-f771-4a13-9ed5-f6355a97f551"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "d06a2c34-d918-4c23-8fc8-f8f2aa199b38"],
 ") ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "7bd7f760-a935-40d7-837c-13a880c46262"],
 " (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]],ExpressionUUID->
  "555d25be-aa39-490e-a29b-580a896f92d8"],
 Cell[BoxData[
  FormBox["\[Vee]", TraditionalForm]],ExpressionUUID->
  "45334b29-0dac-4060-b6ee-be039892df27"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "4"], TraditionalForm]],ExpressionUUID->
  "6235830b-fbde-4ab5-9a64-40f47f38d284"],
 ") es tautolog\[IAcute]a o contradicci\[OAcute]n."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],

Cell["Utilizamos el programa 6.1.:", "Text",
 CellChangeTimes->{{3.7616299789306955`*^9, 3.7616299836339645`*^9}},
 FontSize->14,ExpressionUUID->"83036e15-6d62-43f0-bab7-b6d1af22efe0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", "p2_", ",", "p3_", ",", "p4_"}], "}"}], "]"}], ":=", 
   
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p1", "\[Or]", "p2"}], ")"}], "\[And]", 
    RowBox[{"(", 
     RowBox[{"p3", "\[Or]", "p4"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tautologia", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
       RowBox[{"tautologia", "=", "False"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{"tautologia", ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa es una tautolog\[IAcute]a\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa no es una tautolog\[IAcute]a\>\"", 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.761629768752674*^9, 3.761629776941142*^9}, {
   3.7616298221587286`*^9, 3.7616298717065625`*^9}, {3.7616299226514764`*^9, 
   3.761629958748541*^9}, 3.7616301248290405`*^9, {3.7616302780248027`*^9, 
   3.761630278748844*^9}},ExpressionUUID->"64b632ce-84ea-4efa-80d1-\
7886a6645421"],

Cell[BoxData["\<\"La forma enunciativa no es una tautolog\[IAcute]a\"\>"], \
"Print",
 CellChangeTimes->{3.7616301602330656`*^9, 
  3.761630284148153*^9},ExpressionUUID->"498f4f8c-0ccd-40b0-890f-\
ae8ebcf2e793"]
}, Open  ]],

Cell["\<\
Para comprobar si es contradicci\[OAcute]n utilizamos el programa 6.2. :\
\>", "Text",
 CellChangeTimes->{{3.76163020874584*^9, 
  3.7616302215115705`*^9}},ExpressionUUID->"05ceb308-4b49-420c-9775-\
be6306c5eba3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", "p2_", ",", "p3_", ",", "p4_"}], "}"}], "]"}], ":=", 
   
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p1", "\[Or]", "p2"}], ")"}], "\[And]", 
    RowBox[{"(", 
     RowBox[{"p3", "\[Or]", "p4"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"contradiccion", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", 
       RowBox[{"contradiccion", "=", "False"}]}], "]"}], ";"}]}], "\n", "]"}],
   ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{"contradiccion", ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa es una contradicci\[OAcute]n\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", 
    "\"\<La forma enunciativa no es una contradicci\[OAcute]n\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7616302542294416`*^9, 3.7616302668411627`*^9}, 
   3.7616304179598064`*^9},ExpressionUUID->"b3263cd0-0f7c-4f78-9a65-\
3f51e48836fc"],

Cell[BoxData["\<\"La forma enunciativa no es una contradicci\[OAcute]n\"\>"], \
"Print",
 CellChangeTimes->{
  3.761630440659105*^9},ExpressionUUID->"c28b9831-34e4-4201-b7da-\
9f1b40bdcdeb"]
}, Open  ]],

Cell["Podemos hacerlo directamente mediante :", "Text",
 CellChangeTimes->{{3.761630469867776*^9, 
  3.7616304775942173`*^9}},ExpressionUUID->"339a1a45-1e8c-405a-985e-\
71bfdcc8efb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TautologyQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p1", "\[Or]", "p2"}], ")"}], "\[And]", 
    RowBox[{"(", 
     RowBox[{"p3", "\[Or]", "p4"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.7616304885758457`*^9, 
  3.761630533693426*^9}},ExpressionUUID->"320215e6-4217-47c9-8928-\
e7f5082849d2"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.76163053586355*^9},ExpressionUUID->"ff7cb9a1-1876-4f36-9bea-2a08d6176bac"]
}, Closed]],

Cell["lo que nos asegura que no es una tautolog\[IAcute]a, y mediante :", \
"Text",
 CellChangeTimes->{{3.7616305537755747`*^9, 
  3.7616305692634606`*^9}},ExpressionUUID->"a5fed0c4-4287-4612-b4d5-\
cf5120a64a72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TautologyQ", "[", 
  RowBox[{
   RowBox[{"\[Not]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p1", "\[Or]", "p2"}], ")"}], "\[And]", 
      RowBox[{"(", 
       RowBox[{"p3", "\[Or]", "p4"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.761630587004475*^9, 
  3.761630614919072*^9}},ExpressionUUID->"8ecd86c1-c005-474e-abb9-\
4041f5706a1f"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7616306183962708`*^9},ExpressionUUID->"0a8584b7-4251-47cf-82ad-\
cb712d463b47"]
}, Closed]],

Cell["\<\
nos muestra que la negaci\[OAcute]n de la forma enunciativa dada no es una \
tautolog\[IAcute]a y por tanto, dicha forma enunciativa tampoco es una \
contradicci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.7616306464708767`*^9, 
  3.761630697371788*^9}},ExpressionUUID->"17aece82-d0d7-4f80-92f5-\
3a16813560ad"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.2.", "Subsection",
 CellChangeTimes->{{3.7616308053439636`*^9, 3.7616308057879887`*^9}},
 FontSize->16,ExpressionUUID->"7847d439-a555-47f4-943d-7bf1e866f5c8"],

Cell[TextData[{
 "Comprobar con las funciones anteriores si es tautolog\[IAcute]a o \
contradicci\[OAcute]n la forma enunciativa A: (a \[LeftRightArrow] b) ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "020e764b-14cb-4a85-9b55-14b52efc94f4"],
 " c."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, {
   3.7616308197137856`*^9, 3.7616308440501776`*^9}, {3.7616308746459274`*^9, 
   3.7616309576196733`*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],

Cell["Primero definimos la nueva forma enunciativa :", "Text",
 CellChangeTimes->{{3.761630986006297*^9, 
  3.761630999097046*^9}},ExpressionUUID->"aefa9d5b-6fa0-4b3c-8189-\
b56a7c822071"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", " ", "\[Equivalent]", "b"}], ")"}], "\[And]", "c"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761631049809946*^9, 3.761631049818947*^9}, {
  3.761631475904318*^9, 3.761631492476265*^9}, {3.7616315277422824`*^9, 
  3.7616316127301435`*^9}, {3.761631701454218*^9, 3.761631704685403*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7bedab6b-54f5-4a84-8c74-eb020d01d88d"],

Cell["Ejecutamos las dos funciones previas :", "Text",
 CellChangeTimes->{{3.7616312347765255`*^9, 
  3.7616312509014482`*^9}},ExpressionUUID->"f1505580-5b38-4e1c-9e93-\
66c7bd7ef03a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"FormaE_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tautologia", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
           RowBox[{
            RowBox[{"tautologia", "=", "False"}], ";", 
            RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tautologia", "]"}], ";"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7616314620365243`*^9, 3.7616314620435247`*^9}, {
   3.7616317158640423`*^9, 3.7616317170591106`*^9}, {3.761631811419508*^9, 
   3.7616318126015754`*^9}, {3.7616337603499804`*^9, 
   3.7616337610170183`*^9}, {3.7620659369417686`*^9, 
   3.7620659606070104`*^9}, {3.7620660356119423`*^9, 3.762066037281145*^9}, 
   3.762066131764938*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"2678e1b0-292a-44d4-99fb-fa4fe3b9a18a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Contradiccion", "[", 
    RowBox[{"FormaE_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"contradiccion", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", 
           RowBox[{
            RowBox[{"contradiccion", "=", "False"}], ";", 
            RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "contradiccion", "]"}], ";"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761633794349925*^9, 3.7616338324901066`*^9}, 
   3.7620659715426297`*^9, {3.762066022289519*^9, 3.762066024535923*^9}, 
   3.7620661503933706`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"d943c856-1c6f-4c04-8d68-e63677eba573"],

Cell["\<\
Y comprobamos si nuestra forma enunciativa es tautolog\[IAcute]a o \
contradicci\[OAcute]n :\
\>", "Text",
 CellChangeTimes->{{3.761631276868933*^9, 
  3.7616313016643515`*^9}},ExpressionUUID->"2ef57d7c-a455-4128-b3c1-\
fca11921282e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tautologia", "[", 
  RowBox[{"FormaE", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7616313112569003`*^9, 3.761631330870022*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"55eefee4-91ed-4a8e-80fc-ce22ae994184"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7616318235432014`*^9, 3.761631850549746*^9}, 
   3.7616337703925548`*^9, 3.761633985587863*^9, 3.76206598887426*^9, 
   3.7620661457601624`*^9, {3.7620666391118307`*^9, 3.7620667488172235`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"ac522cc1-3ac2-446c-97e1-a5a19181b296"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Contradiccion", "[", 
  RowBox[{"FormaE", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7616313525722632`*^9, 3.7616313679141407`*^9}, {
  3.7616339493037877`*^9, 3.761633962350534*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6f15e925-ee09-43c7-aa14-adb4df57fa93"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.7616338415926275`*^9, 3.7616339515739174`*^9, 3.7616339870419464`*^9, 
   3.762066015378707*^9, 3.76206615569738*^9, {3.7620666922641244`*^9, 
   3.7620667212967753`*^9}, 3.7620667518748293`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"8527d13c-84c9-4cf8-a004-665a06e061ac"]
}, Closed]],

Cell["Por tanto no es tautolog\[IAcute]a ni contracci\[OAcute]n.", "Text",
 CellChangeTimes->{{3.7616313786437545`*^9, 
  3.7616314084864616`*^9}},ExpressionUUID->"04efaafc-e25f-42e7-9a1f-\
2a2b47485eca"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.3.", "Subsection",
 CellChangeTimes->{{3.7616308053439636`*^9, 3.7616308057879887`*^9}, {
  3.7616341734366074`*^9, 3.7616341738266296`*^9}},
 FontSize->16,ExpressionUUID->"ddf4fa26-45b4-47d9-b9b6-c192790bdb88"],

Cell[TextData[{
 "Comprobar si las formas enunciativas \n(p ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "9568550b-a09e-45c4-a3c1-7bf09236aa35"],
 " q  ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "bb621398-72a8-4e67-b79b-79866d966f45"],
 " r) \[RightArrow] q        y      (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "33c5ffd0-463e-42fc-811c-f31a03cd1e53"],
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "1596fa74-f8bc-4730-9315-8372c1cc9060"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["p", "2"]}], TraditionalForm]],ExpressionUUID->
  "6447ea5a-fb52-412d-95d2-c6d209d28c2b"],
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "94d185c4-733b-4c8e-90fc-2d467679afcf"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]],ExpressionUUID->
  "9fbcef4a-9907-44fe-8473-71baed62890f"],
 ")",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "9a593498-3435-4a98-a0e5-9d71b8f67de5"],
 "(\[Tilde]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "4bef5a94-6280-4912-ac9c-e88878e448ab"],
 ").\nson tautolog\[IAcute]as o contradicciones."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, {
   3.7616308197137856`*^9, 3.7616308440501776`*^9}, {3.7616308746459274`*^9, 
   3.7616309576196733`*^9}, {3.76163420214425*^9, 3.7616343038890686`*^9}, {
   3.7616343353448677`*^9, 3.761634457500855*^9}, {3.761634505460598*^9, 
   3.761634526493801*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],

Cell["\<\
Calculamos el n\[UAcute]mero de combinaciones de valores de verdad para las \
que la primera toma valor True:\
\>", "Text",
 CellChangeTimes->{{3.761630986006297*^9, 3.761630999097046*^9}, {
  3.7616345424847155`*^9, 
  3.7616345950887246`*^9}},ExpressionUUID->"e3428c1b-9841-4844-ba1c-\
64020b4e00d9"],

Cell[BoxData[
 RowBox[{"Clear", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.7616346486737895`*^9, 3.761634656426233*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6ab0af0a-aa48-4ce7-bdf0-5435b348a071"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiabilityCount", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"p", "\[And]", "q", "\[And]", "r"}], ")"}], "\[Implies]", "q"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7616346060863533`*^9, 3.7616346383691998`*^9}, 
   3.761887712351779*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"af2ac4b3-a0bf-46f6-b039-9f599ef277bf"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.7616346146008406`*^9, 3.7616346598084264`*^9}, {
   3.7618875283942575`*^9, 3.761887538456833*^9}, 3.7618877134768434`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8b5ddba0-4900-4e50-a81b-7ea2a6e4ec5c"]
}, Closed]],

Cell[TextData[{
 "Por tanto, la forma enunciativa (p ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "67ee056a-9e39-42b4-9beb-42a505558887"],
 " q  ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "1816b13f-2faf-4eee-bc91-af08f7f7111b"],
 " r) \[RightArrow] q es una tautolog\[IAcute]a. Tambi\[EAcute]n lo podemos \
probar mediante:"
}], "Text",
 CellChangeTimes->{{3.7616347341856804`*^9, 
  3.761634876303809*^9}},ExpressionUUID->"42814df0-4bd5-4895-9f75-\
4792d7d1b9d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tautologia", ":=", 
   RowBox[{
    RowBox[{"SatisfiabilityCount", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", "\[And]", "q", "\[And]", "r"}], ")"}], "\[Implies]", 
      "q"}], "]"}], "\[Equal]", 
    RowBox[{"2", "^", "3"}]}]}], ";"}], "\n", "tautologia"}], "Input",
 CellChangeTimes->{{3.7616349299998803`*^9, 3.761634942842615*^9}, 
   3.761887718047105*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"68a201c2-2497-4d65-ab0f-fee59fb6fdda"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7616349547662973`*^9, 3.7618875449822063`*^9, 
  3.7618877187581453`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"32db41b4-2ab2-47fd-9bff-aa49a3201e91"]
}, Closed]],

Cell["\<\
Si ahora comprobamos el n\[UAcute]mero de combinaciones de variables de \
verdad para los cuales la segunda forma enunciativa toma valor True :\
\>", "Text",
 CellChangeTimes->{{3.7616349935365143`*^9, 
  3.761635047698612*^9}},ExpressionUUID->"29b3e525-53ca-46d2-a433-\
83a95e49f853"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SatisfiabilityCount", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p1", "\[And]", "p2", "\[And]", "p3"}], ")"}], "\[And]", 
    RowBox[{"(", 
     RowBox[{"\[Not]", "p2"}], ")"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.7616349903363314`*^9, 3.7616349903433323`*^9}, 
   3.76163507335608*^9, 3.7618877216793127`*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"55c309ea-5f32-42d9-b4b2-df20fab0c424"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7616350809685154`*^9, 3.7618875503905153`*^9, 
  3.7618877225003595`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"6daea5e9-b56d-4cab-8026-00ef10909752"]
}, Closed]],

Cell[TextData[{
 "Lo que nos informa que  (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "3388e697-bbcf-47fc-b151-35e088bc8b43"],
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "3f1227a2-15f6-48c0-8936-b7b006df593b"],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["p", "2"]}], TraditionalForm]],ExpressionUUID->
  "3e10c2d4-240e-4085-bee2-61d042fb044a"],
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "c91cc12d-81f7-4d8e-9c74-59ff4fe9a6b5"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]],ExpressionUUID->
  "8925fe69-6372-49ad-ad19-fb83c4beda18"],
 ")",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "bf63de78-d7fe-47d9-9034-b2617929a69d"],
 "(\[Tilde]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "cfed6fa3-f351-45b2-8469-7390184798e9"],
 ") es una contradicci\[OAcute]n.Tambi\[EAcute]n podr\[IAcute]amos haberlo \
probado mediante :"
}], "Text",
 CellChangeTimes->{{3.761635103307793*^9, 
  3.761635157926917*^9}},ExpressionUUID->"a9d39edf-fc96-465c-b312-\
2fde55bbd18e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"contradiccion", ":=", 
   RowBox[{
    RowBox[{"SatisfiabilityCount", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p1", "\[And]", "p2", "\[And]", "p3"}], ")"}], "\[And]", 
      RowBox[{"(", 
       RowBox[{"\[Not]", "p2"}], ")"}]}], "]"}], "\[Equal]", "0"}]}], 
  ";"}], "\n", "contradiccion"}], "Input",
 CellChangeTimes->{{3.761635192700906*^9, 3.7616352070397263`*^9}, 
   3.76188772863671*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"1d98107d-1ae6-44c6-b6fe-a8b28e28b7c2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7616352102569103`*^9, 3.7618877290627346`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"72769a32-c90d-42c2-bc68-9b05464f4d2a"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2. Formas normales", "Section",
 CellChangeTimes->{{3.7616290667045193`*^9, 3.7616290847555513`*^9}, {
  3.76163527458959*^9, 3.7616352869952993`*^9}},
 FontSize->18,
 FontColor->RGBColor[
  0.5686274509803921, 0., 
   0.],ExpressionUUID->"71705946-d136-4852-9b6b-10d6775b1668"],

Cell[CellGroupData[{

Cell["Ejemplo 6.4.", "Subsection",
 CellChangeTimes->{{3.761635516665436*^9, 3.761635517296472*^9}},
 FontSize->16,ExpressionUUID->"d4ed06d2-b16e-42cb-922c-4d89e9cddd38"],

Cell[TextData[{
 "Calcular las formas normales de la forma enunciativa A: (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "76de89ef-422b-4158-baa0-91ed2bdb0fd9"],
 Cell[BoxData[
  FormBox["\[Vee]", TraditionalForm]],ExpressionUUID->
  "38091c0e-9f43-40d4-8fe5-1849f17db052"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "58fe1d8d-d67e-4527-8a85-f7b49daedb0a"],
 ") \[RightArrow] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]],ExpressionUUID->
  "8f111584-0c32-4b0e-bdec-ecc384e52768"],
 "."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, 
   3.7616355289721394`*^9},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p1", "\[Or]", "p2"}], ")"}], "\[Implies]", "p3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cadena", "=", "\"\<\>\""}], ";", 
  RowBox[{"cadena2", "=", "\"\<\>\""}], ";", 
  RowBox[{"cad", "=", "\"\<\>\""}], ";", 
  RowBox[{"cad2", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contradiccion", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tautologia", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", 
     RowBox[{"cad", "=", "\"\<\>\""}], ";", 
     RowBox[{"cad2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "cad"}], "]"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\< \[And] \>\"", 
                ",", "cad"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "cad2"}], "]"}]}], ",", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "\"\< \[Or] \>\"", ",", "cad2"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "f", "]"}], "]"}], "=", "False"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "cad"}], "]"}]}], ",", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "\"\< \[And] \>\"", ",", "cad"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "cad2"}], "]"}]}], 
             ",", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\< \[Or] \>\"", 
                ",", "cad2"}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cadena", "\[Equal]", "\"\<\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"cadena", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena", ",", "\"\<(\>\"", ",", "cad", ",", "\"\<)\>\""}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"cadena", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena", ",", "\"\< \[Or] (\>\"", ",", "cad", ",", "\"\<)\>\""}],
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"contradiccion", "=", "False"}], ";"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cadena2", "\[Equal]", "\"\<\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"cadena2", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena2", ",", "\"\<(\>\"", ",", "cad2", ",", "\"\<)\>\""}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"cadena2", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena2", ",", "\"\< \[And] (\>\"", ",", "cad2", ",", 
             "\"\<)\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tautologia", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"contradiccion", ",", 
    RowBox[{"Print", "[", "\"\<Es una contradicci\[OAcute]n.\>\"", "]"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<No es contradicci\[OAcute]n y la forma normal disyuntiva es: \>\"", 
      ",", "cadena"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"tautologia", ",", 
    RowBox[{"Print", "[", "\"\<Es una tautolog\[IAcute]a.\>\"", "]"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<No es tautolog\[IAcute]a y la forma normal conjuntiva es: \>\"", 
      ",", "cadena2"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.76163562741477*^9, 3.7616356765015783`*^9}, {
   3.7616357074373474`*^9, 3.761635720729108*^9}, {3.7616357839267225`*^9, 
   3.7616360265015965`*^9}, 3.761636234889516*^9, 3.7616362653042555`*^9, {
   3.761636302324373*^9, 3.7616363066976233`*^9}, {3.761636338165423*^9, 
   3.7616363406515656`*^9}, {3.761636374321491*^9, 3.761636391229458*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"88123363-34d1-4e7d-9685-be6debe8f467"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es contradicci\[OAcute]n y la forma normal disyuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"(p1 \[And] p2 \[And] p3) \[Or] (p1 \[And] \
(~p2) \[And] p3) \[Or] ((~p1) \[And] p2 \[And] p3) \[Or] ((~p1) \[And] (~p2) \
\[And] p3) \[Or] ((~p1) \[And] (~p2) \[And] (~p3))\"\>"}],
  SequenceForm[
  "No es contradicci\[OAcute]n y la forma normal disyuntiva es: ", 
   "(p1 \[And] p2 \[And] p3) \[Or] (p1 \[And] (~p2) \[And] p3) \[Or] ((~p1) \
\[And] p2 \[And] p3) \[Or] ((~p1) \[And] (~p2) \[And] p3) \[Or] ((~p1) \[And] \
(~p2) \[And] (~p3))"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7616360594784827`*^9, 3.76163639615374*^9, 
  3.7618877559592733`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[18]:=",ExpressionUUID->"850c6894-4e85-4603-9197-9c52c948b8d1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es tautolog\[IAcute]a y la forma normal conjuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"((~p1) \[Or] (~p2) \[Or] p3) \[And] ((~p1) \
\[Or] p2 \[Or] p3) \[And] (p1 \[Or] (~p2) \[Or] p3)\"\>"}],
  SequenceForm[
  "No es tautolog\[IAcute]a y la forma normal conjuntiva es: ", 
   "((~p1) \[Or] (~p2) \[Or] p3) \[And] ((~p1) \[Or] p2 \[Or] p3) \[And] (p1 \
\[Or] (~p2) \[Or] p3)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7616360594784827`*^9, 3.76163639615374*^9, 
  3.761887755965274*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[18]:=",ExpressionUUID->"f6caf9f8-5c64-421c-bbd3-fbd7a1a6d443"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.5.", "Subsection",
 CellChangeTimes->{3.761888031212017*^9},
 FontSize->16,ExpressionUUID->"686231c7-4844-447f-8fd1-0081aec171c7"],

Cell[TextData[{
 "Calcular, usando la funci\[OAcute]n 6.3., las formas normales de la forma \
enunciativa A: (a \[LeftRightArrow] b) ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "b162d177-a987-491c-89c7-8627b1574ac3"],
 " c."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, 
   3.7616355289721394`*^9, {3.7618880859161453`*^9, 3.7618881335168686`*^9}, {
   3.7618881676008177`*^9, 3.7618881836787376`*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"ec8b1b48-074a-4507-93ab-b7fa63df9557"],

Cell["Comencemos ejecutando la funci\[OAcute]n anterior:", "Text",
 CellChangeTimes->{{3.761888216923639*^9, 3.761888227708256*^9}},
 FontSize->14,ExpressionUUID->"f7fbddc0-0913-4823-a8ad-cd593347978e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FormasNormales", "[", 
    RowBox[{"FormaE_", ",", "nombres_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cadena", ",", "cadena2", ",", "n", ",", "cad", ",", "cad2", ",", "j", 
       ",", "f", ",", "resto"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "nombres", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"cadena", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"cadena2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"cad", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"cad2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"contradiccion", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tautologia", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"cad", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"cad2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "cad"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", 
                    "\"\< \[And] \>\"", ",", " ", "cad"}], "]"}]}]}], " ", 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(~\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "cad2"}], "]"}]}], ",", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(~\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "\"\< \[Or] \>\"", ",", "cad2"}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}], "\n", "       ", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"p", "[", 
                 RowBox[{"[", "f", "]"}], "]"}], "=", "False"}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(~\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "cad"}], "]"}]}], ",", 
                 RowBox[{"cad", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{"\"\<(\[Tilde]\>\"", ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "\"\<)\>\"", 
                    ",", "\"\< \[And] \>\"", ",", "cad"}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\n", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", "cad2"}], 
                   "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"cad2", "=", 
                  RowBox[{"StringJoin", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"nombres", "[", 
                    RowBox[{"[", "f", "]"}], "]"}], "]"}], ",", 
                    "\"\< \[Or] \>\"", ",", "cad2"}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\n", "     ", "]"}], 
            ";"}]}], "\n", "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"cadena", "\[Equal]", "\"\<\>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"cadena", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena", ",", "\"\<(\>\"", ",", "cad", ",", "\"\<)\>\""}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"cadena", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena", ",", "\"\< \[Or] (\>\"", ",", "cad", ",", 
                 "\"\<)\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"contradiccion", "=", "False"}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"cadena2", "\[Equal]", "\"\<\>\""}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"cadena2", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena2", ",", "\"\<(\>\"", ",", "cad2", ",", "\"\<)\>\""}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"cadena2", "=", 
               RowBox[{"StringJoin", "[", 
                RowBox[{
                "cadena2", ",", "\"\< \[And] (\>\"", ",", "cad2", ",", 
                 "\"\<)\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tautologia", "=", "False"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\n", "   ", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"contradiccion", ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<Es una contradicci\[OAcute]n.\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<No es contradicci\[OAcute]n y la forma normal disyuntiva es: \>\
\"", ",", "cadena"}], "]"}]}], "]"}], ";", "\n", 
      RowBox[{"If", "[", 
       RowBox[{"tautologia", ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\"\<Es una tautolog\[IAcute]a.\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<No es tautolog\[IAcute]a y la forma normal conjuntiva es: \>\"",
           ",", "cadena2"}], "]"}]}], "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761888243637167*^9, 3.761888482745843*^9}, {
   3.761888516071749*^9, 3.761888765775031*^9}, 
   3.7618889329415927`*^9},ExpressionUUID->"40e8d109-b349-4a1d-af88-\
b5231c9c7ada"],

Cell["\<\
Ahora introducimos la nueva forma enunciativa y calculamos con la funci\
\[OAcute]n anterior sus formas normales :\
\>", "Text",
 CellChangeTimes->{{3.7618887946936855`*^9, 
  3.761888800521019*^9}},ExpressionUUID->"94c9e104-468e-4ea5-8f5d-\
e6a879712fe7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "\[Equivalent]", "b"}], ")"}], "\[And]", "c"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FormasNormales", "[", 
  RowBox[{"FormaE", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7618888096645412`*^9, 3.7618888992296643`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"382aa014-6f93-40b8-bfc2-2495b3fd431e"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es contradicci\[OAcute]n y la forma normal disyuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"(a \[And] b \[And] c) \[Or] ((~a) \[And] \
(~b) \[And] c)\"\>"}],
  SequenceForm[
  "No es contradicci\[OAcute]n y la forma normal disyuntiva es: ", 
   "(a \[And] b \[And] c) \[Or] ((~a) \[And] (~b) \[And] c)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.761888901213778*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[28]:=",ExpressionUUID->"0f6ed689-7241-48a3-90de-2b60026134d4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es tautolog\[IAcute]a y la forma normal conjuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"((~a) \[Or] (~b) \[Or] c) \[And] ((~a) \[Or] \
b \[Or] (~c)) \[And] ((~a) \[Or] b \[Or] c) \[And] (a \[Or] (~b) \[Or] (~c)) \
\[And] (a \[Or] (~b) \[Or] c) \[And] (a \[Or] b \[Or] c)\"\>"}],
  SequenceForm[
  "No es tautolog\[IAcute]a y la forma normal conjuntiva es: ", 
   "((~a) \[Or] (~b) \[Or] c) \[And] ((~a) \[Or] b \[Or] (~c)) \[And] ((~a) \
\[Or] b \[Or] c) \[And] (a \[Or] (~b) \[Or] (~c)) \[And] (a \[Or] (~b) \[Or] \
c) \[And] (a \[Or] b \[Or] c)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7618889012187786`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[28]:=",ExpressionUUID->"43b0e5cd-b021-4638-bdd8-23f3f763bd9b"]
}, Open  ]]
}, Closed]],

Cell["\<\
Observamos que una de las mejoras de esta funci\[OAcute]n es que las formas \
normales est\[AAcute]n dadas manteniendo los mismos nombres de las variables \
de enunciado que definen la forma enunciativa de partida.\
\>", "Text",
 CellChangeTimes->{{3.761889046567092*^9, 
  3.761889065372167*^9}},ExpressionUUID->"1d0c66c2-cdd7-4ff0-ae3e-\
27a978e4e5ef"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.6.", "Subsection",
 CellChangeTimes->{3.761888031212017*^9, 3.7618891909563503`*^9},
 FontSize->16,ExpressionUUID->"9d539de0-ede8-4e47-bcc9-a717da85ab8c"],

Cell[TextData[{
 "Calcular la forma normal disyuntiva y la forma normal conjuntiva de la \
forma enunciativa A: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "92a3412a-eb21-492b-b50d-c34e0ab1025f"],
 " \[LeftRightArrow] ( ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "68a021a1-b195-4909-b97c-e1c13f9d5aa2"],
 " \[Vee] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "3"], TraditionalForm]],ExpressionUUID->
  "55944981-0da4-42bb-8a6f-4c032f4f36e6"],
 ")."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, 
   3.7616355289721394`*^9, {3.7618880859161453`*^9, 3.7618881335168686`*^9}, {
   3.7618881676008177`*^9, 3.7618881836787376`*^9}, {3.7618892082593403`*^9, 
   3.761889255918066*^9}, {3.761889330636298*^9, 3.7618893649732623`*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"8f9ab794-6b53-4872-bbcb-79c5f6a08c2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{"p1", "\[Equivalent]", 
   RowBox[{"(", 
    RowBox[{"p2", "\[Or]", "p3"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7618894036004715`*^9, 3.761889461647792*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"981a9b82-0505-4bb5-a37b-8bc0ef10f8e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p1", "&&", "p2"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"p1", "&&", "p3"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "p1"}], "&&", 
    RowBox[{"!", "p2"}], "&&", 
    RowBox[{"!", "p3"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.761889462806858*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e77b5676-9964-4f63-8e1b-3f8bc249301f"]
}, Closed]],

Cell["\<\
Como podemos observar devuelve una simplificaci\[OAcute]n de la forma normal \
disyuntiva.\
\>", "Text",
 CellChangeTimes->{{3.761889481968954*^9, 
  3.7618894894813833`*^9}},ExpressionUUID->"d800cfcf-a39e-4ed0-8cbc-\
35ba162ea425"],

Cell["\<\
si aplicamos la funci\[OAcute]n anterior a la negaci\[OAcute]n de y hacemos \
la negaci\[OAcute]n de la expresi\[OAcute]n que nos devuelve Mathematica, \
tras aplicar dos veces las leyes de De Morgan obtenemos, previa simplificaci\
\[OAcute]n de dobles negaciones, si las hubiera, la forma normal conjuntiva\
\>", "Text",
 CellChangeTimes->{{3.761889542498416*^9, 
  3.761889547569706*^9}},ExpressionUUID->"d77c06c8-f803-4b78-a52f-\
aa8b50ce5a21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{"\[Not]", 
   RowBox[{"(", 
    RowBox[{"p1", "\[Equivalent]", 
     RowBox[{"(", 
      RowBox[{"p2", "\[Or]", "p3"}], ")"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761889562462558*^9, 3.761889564573679*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"400a3faa-424f-4fd8-9134-5fda9ebe6a67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p1", "&&", 
    RowBox[{"!", "p2"}], "&&", 
    RowBox[{"!", "p3"}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "p1"}], "&&", "p2"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"!", "p1"}], "&&", "p3"}], ")"}]}]], "Output",
 CellChangeTimes->{3.761889575514304*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"123d289f-4922-46f8-81dd-6809e201dcb9"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.7.", "Subsection",
 CellChangeTimes->{3.761888031212017*^9, 3.7618891909563503`*^9, 
  3.7618899614203773`*^9},
 FontSize->16,ExpressionUUID->"585c642a-8d23-491e-9529-2f132809a72e"],

Cell[TextData[{
 "Calcular una forma enunciativa restringida equivalente a la forma \
enunciativa A: ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "bc11f458-950f-4020-a944-922ec9e42669"],
 "\[RightArrow]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "da576b43-dc7f-448c-81e9-3195a2b8655e"],
 "."
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, 
   3.7616355289721394`*^9, {3.7618880859161453`*^9, 3.7618881335168686`*^9}, {
   3.7618881676008177`*^9, 3.7618881836787376`*^9}, {3.7618892082593403`*^9, 
   3.761889255918066*^9}, {3.761889330636298*^9, 3.7618893649732623`*^9}, 
   3.761889985967781*^9},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"548cc647-5ac2-4748-af52-fc900c3ebe51"],

Cell["\<\
Bastar\[AAcute] con dar la forma normal disyuntiva o la forma normal \
conjuntiva de A para tener tal forma enunciativa restringida.\
\>", "Text",
 FontSize->14,ExpressionUUID->"7e919543-acdb-458c-8983-b58096229199"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p1_", ",", "p2_"}], "}"}], "]"}], ":=", 
   RowBox[{"p1", "\[Implies]", "p2"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cadena", "=", "\"\<\>\""}], ";", 
  RowBox[{"cadena2", "=", "\"\<\>\""}], ";", 
  RowBox[{"cad", "=", "\"\<\>\""}], ";", 
  RowBox[{"cad2", "=", "\"\<\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contradiccion", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tautologia", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", 
     RowBox[{"cad", "=", "\"\<\>\""}], ";", 
     RowBox[{"cad2", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "cad"}], "]"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\< \[And] \>\"", 
                ",", "cad"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "cad2"}], "]"}]}], ",", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "\"\< \[Or] \>\"", ",", "cad2"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "f", "]"}], "]"}], "=", "False"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "cad"}], "]"}]}], ",", 
             RowBox[{"cad", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<(~p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\<)\>\"", ",", 
                "\"\< \[And] \>\"", ",", "cad"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"f", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "cad2"}], "]"}]}], 
             ",", 
             RowBox[{"cad2", "=", 
              RowBox[{"StringJoin", "[", 
               RowBox[{"\"\<p\>\"", ",", 
                RowBox[{"ToString", "[", "f", "]"}], ",", "\"\< \[Or] \>\"", 
                ",", "cad2"}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cadena", "\[Equal]", "\"\<\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"cadena", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena", ",", "\"\<(\>\"", ",", "cad", ",", "\"\<)\>\""}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"cadena", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena", ",", "\"\< \[Or] (\>\"", ",", "cad", ",", "\"\<)\>\""}],
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"contradiccion", "=", "False"}], ";"}], "\[IndentingNewLine]",
        ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cadena2", "\[Equal]", "\"\<\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"cadena2", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena2", ",", "\"\<(\>\"", ",", "cad2", ",", "\"\<)\>\""}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"cadena2", "=", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
            "cadena2", ",", "\"\< \[And] (\>\"", ",", "cad2", ",", 
             "\"\<)\>\""}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tautologia", "=", "False"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"contradiccion", ",", 
    RowBox[{"Print", "[", "\"\<Es una contradicci\[OAcute]n.\>\"", "]"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<No es contradicci\[OAcute]n y la forma normal disyuntiva es: \>\"", 
      ",", "cadena"}], "]"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"tautologia", ",", 
    RowBox[{"Print", "[", "\"\<Es una tautolog\[IAcute]a.\>\"", "]"}], ",", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<No es tautolog\[IAcute]a y la forma normal conjuntiva es: \>\"", 
      ",", "cadena2"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.761890020927781*^9, 3.761890086943557*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"4d4c6f3c-9127-45aa-88a0-dffa83cf7151"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es contradicci\[OAcute]n y la forma normal disyuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"(p1 \[And] p2) \[Or] ((~p1) \[And] p2) \[Or] \
((~p1) \[And] (~p2))\"\>"}],
  SequenceForm[
  "No es contradicci\[OAcute]n y la forma normal disyuntiva es: ", 
   "(p1 \[And] p2) \[Or] ((~p1) \[And] p2) \[Or] ((~p1) \[And] (~p2))"],
  Editable->False]], "Print",
 CellChangeTimes->{3.761890089403697*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[32]:=",ExpressionUUID->"08ed6390-9880-4af8-a6d3-0c04693160ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"No es tautolog\[IAcute]a y la forma normal conjuntiva es: \
\"\>", "\[InvisibleSpace]", "\<\"((~p1) \[Or] p2)\"\>"}],
  SequenceForm[
  "No es tautolog\[IAcute]a y la forma normal conjuntiva es: ", 
   "((~p1) \[Or] p2)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.7618900894086976`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[32]:=",ExpressionUUID->"f0406ded-c405-4797-999a-16e6e647b63a"]
}, Open  ]]
}, Closed]],

Cell[TextData[{
 "Por tanto, una soluci\[OAcute]n para este problema ser\[IAcute]a la forma \
enunciativa restringida (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "1"], TraditionalForm]],ExpressionUUID->
  "6ae64294-b555-4619-8630-800b9d8a0153"],
 Cell[BoxData[
  FormBox["\[Vee]", TraditionalForm]],ExpressionUUID->
  "89ffcd87-628e-4407-b55d-7032adf64138"],
 " (~",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "2"], TraditionalForm]],ExpressionUUID->
  "885bf558-cbdf-4e8f-90ae-92a6cfe5fe12"],
 "))."
}], "Text",
 FontSize->14,ExpressionUUID->"1fc8bde1-72ce-4a63-9efb-f6997ba7481d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3. Conjuntos adecuados de conectivas", "Section",
 CellChangeTimes->{{3.7616290667045193`*^9, 3.7616290847555513`*^9}, {
  3.76163527458959*^9, 3.7616352869952993`*^9}, {3.7618902279486217`*^9, 
  3.7618902392442675`*^9}},
 FontSize->18,
 FontColor->RGBColor[
  0.5686274509803921, 0., 
   0.],ExpressionUUID->"6c329cce-828f-447c-a12d-7ab51d761207"],

Cell[CellGroupData[{

Cell["Ejemplo 6.8.", "Subsection",
 CellChangeTimes->{3.7618902523000145`*^9},
 FontSize->16,ExpressionUUID->"da34868d-b43b-4779-868a-534a9864403b"],

Cell["\<\
Obtener formas enunciativas equivalentes a la forma enunciativa 
                                                          (p\[RightArrow]q)\
\[RightArrow](~r) 
en las que s\[OAcute]lo figuren las conectivas de los conjuntos {\[Tilde], \
\[And]}, {\[Tilde], \[RightArrow]} y {\[UpArrow]}.\
\>", "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, {3.761629410637191*^9, 3.7616294233699193`*^9}, 
   3.7616355289721394`*^9, {3.7618880859161453`*^9, 3.7618881335168686`*^9}, {
   3.7618881676008177`*^9, 3.7618881836787376`*^9}, {3.7618892082593403`*^9, 
   3.761889255918066*^9}, {3.761889330636298*^9, 3.7618893649732623`*^9}, 
   3.761889985967781*^9, {3.7618905693111467`*^9, 3.7618905863281198`*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"6ead169f-5268-4778-a924-b4a0671dd806"],

Cell["\<\
Comenzamos obteniendo la forma enunciativa en la que s\[OAcute]lo figuran las \
conectivas del conjunto {\[Tilde], \[And]}:\
\>", "Text",
 CellChangeTimes->{{3.7618906581102257`*^9, 
  3.7618906810685387`*^9}},ExpressionUUID->"0cb39941-0987-43ff-9899-\
9a84b62f8bc5"],

Cell[BoxData[
 RowBox[{"Clear", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.7618907463202705`*^9, 3.76189074910143*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"3dd886c6-e51d-4c33-a5d7-e08dc7f1547c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "\[Implies]", "q"}], ")"}], "\[Implies]", 
    RowBox[{"(", 
     RowBox[{"\[Not]", "r"}], ")"}]}], ",", "\"\<AND\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.761890685136771*^9, 3.761890732301469*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"30121c6a-3235-4e23-9f44-17099fe37175"],

Cell[BoxData[
 RowBox[{
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "p"}], "&&", "r"}], ")"}]}], "&&", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{"q", "&&", "r"}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.7618907350736275`*^9, 3.761890750780526*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"6a91fd6f-d434-48f4-90f5-04e52247101b"]
}, Closed]],

Cell["\<\
Ahora vamos a obtener la forma enunciativa en la que s\[OAcute]lo figuren las \
conectivas negaci\[OAcute]n e implicaci\[OAcute]n :\
\>", "Text",
 CellChangeTimes->{{3.761890891558578*^9, 
  3.761890899074008*^9}},ExpressionUUID->"8509dfc5-ab72-4919-a2d2-\
bbd74f7f9ab0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "\[Implies]", "q"}], ")"}], "\[Implies]", 
    RowBox[{"(", 
     RowBox[{"\[Not]", "r"}], ")"}]}], ",", "\"\<IMPLIES\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.761890911949744*^9, 3.761890914930915*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"84ce59db-d317-4882-aec7-76b15bda0a7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "\[Implies]", 
    RowBox[{"!", 
     RowBox[{"(", 
      RowBox[{"q", "\[Implies]", 
       RowBox[{"!", "r"}]}], ")"}]}]}], ")"}], "\[Implies]", 
  RowBox[{"!", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"!", "p"}], "\[Implies]", "r"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.7618909170900383`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6e37ac78-7eee-41ec-82bd-76aa4b1a720d"]
}, Closed]],

Cell["\<\
Por \[UAcute]ltimo obtenemos la forma enunciativa en la que s\[OAcute]lo \
figura la conectiva nand y negaci\[OAcute]n :\
\>", "Text",
 CellChangeTimes->{{3.7618909484968348`*^9, 
  3.7618909541371574`*^9}},ExpressionUUID->"492975a7-e36c-4ed1-bff1-\
f62d0af83292"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "\[Implies]", "q"}], ")"}], "\[Implies]", 
    RowBox[{"(", 
     RowBox[{"\[Not]", "r"}], ")"}]}], ",", "\"\<NAND\>\""}], "]"}]], "Input",\

 CellChangeTimes->{{3.761890685136771*^9, 3.761890732301469*^9}, 
   3.7618909695830407`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"556f9730-4ef4-457a-8cae-472169f02540"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "\[Nand]", 
    RowBox[{"!", "q"}]}], ")"}], "\[Nand]", "r"}]], "Output",
 CellChangeTimes->{3.761890970492093*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"bbc1c1a0-4116-4ac0-a280-1d52d7b63bd8"]
}, Closed]],

Cell["\<\
S\[OAcute]lo tendr\[IAcute]amos que eliminar manualmente la negaci\[OAcute]n \
usando para ello la correspondiente equivalencia l\[OAcute]gica.\
\>", "Text",
 CellChangeTimes->{{3.761891003958007*^9, 
  3.7618910118844604`*^9}},ExpressionUUID->"0c62e489-7f9d-4a28-8335-\
2e572056bc09"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4. Equivalencias l\[OAcute]gicas e implicaciones l\[OAcute]gicas", \
"Section",
 CellChangeTimes->{{3.7616290667045193`*^9, 3.7616290847555513`*^9}, {
  3.76163527458959*^9, 3.7616352869952993`*^9}, {3.7618902279486217`*^9, 
  3.7618902392442675`*^9}, {3.76189107710019*^9, 3.7618910915480165`*^9}},
 FontSize->18,
 FontColor->RGBColor[
  0.5686274509803921, 0., 
   0.],ExpressionUUID->"132f11c6-0070-4044-97be-f0490ec1d8f0"],

Cell[CellGroupData[{

Cell["Ejemplo 6.9.", "Subsection",
 CellChangeTimes->{3.76189147257281*^9},
 FontSize->16,ExpressionUUID->"c14e48e3-3a6e-49e2-9be2-b4ac7b041f95"],

Cell["\<\
Comprobar que las siguientes formas enunciativas son equivalentes:
\ta) (p \[RightArrow] q)
\tb) ((~q) \[RightArrow] (~p))\
\>", "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, 3.761891162846095*^9},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"94ced1a7-7958-44e5-b8bd-df3c18c5797d"],

Cell["\<\
Utilizando la funci\[OAcute]n 6.1., lo primero que hemos de hacer \
ser\[AAcute] ejercutarla en el archivo de trabajo :\
\>", "Text",
 CellChangeTimes->{{3.7618911898576393`*^9, 
  3.7618911944098997`*^9}},ExpressionUUID->"b7e180aa-4203-4213-a74f-\
9e5b66d0f513"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"FormaE_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tautologia", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
           RowBox[{
            RowBox[{"tautologia", "=", "False"}], ";", 
            RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tautologia", "]"}], ";"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7616314620365243`*^9, 3.7616314620435247`*^9}, {
   3.7616317158640423`*^9, 3.7616317170591106`*^9}, {3.761631811419508*^9, 
   3.7616318126015754`*^9}, {3.7616337603499804`*^9, 
   3.7616337610170183`*^9}, {3.7620659369417686`*^9, 
   3.7620659606070104`*^9}, {3.7620660356119423`*^9, 3.762066037281145*^9}, 
   3.762066131764938*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"f03b02fa-a508-4e1d-a81d-dd35cfe09139"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "\[Implies]", "q"}], ")"}], "\[Equivalent]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Not]", "q"}], ")"}], "\[Implies]", 
      RowBox[{"(", 
       RowBox[{"\[Not]", "p"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Tautologia", "[", 
  RowBox[{"FormaE", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.761891244284753*^9, 3.76189134249337*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"832c085b-ca09-41c0-a9fa-beb9282955c4"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7618913478516765`*^9, 3.76206684329699*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"9af05abc-9a93-4b37-8c97-f17bafe1b304"]
}, Closed]],

Cell["\<\
Por tanto, la forma enunciativa ((p \[RightArrow] q) \[LeftRightArrow] ((~ q) \
\[RightArrow] (~ p))) es una tautolog\[IAcute]a de lo que deducimos que (p \
\[RightArrow] q) es l\[OAcute]gicamente equivalente a ((~ q) \[RightArrow] (~ \
p)).\
\>", "Text",
 FontSize->14,ExpressionUUID->"59743a71-7dd0-4d62-ac2a-34999129a7b8"],

Cell["\<\
En las \[UAcute]ltimas versiones de Mathematica podemos hacerlo usando la \
orden TautologyQ[] vista en secciones previas :\
\>", "Text",
 CellChangeTimes->{{3.7618913775213737`*^9, 
  3.761891382569662*^9}},ExpressionUUID->"a67c5509-2817-42cd-a0b1-\
32057305bcde"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TautologyQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "\[Implies]", "q"}], ")"}], "\[Equivalent]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Not]", "q"}], ")"}], "\[Implies]", 
      RowBox[{"(", 
       RowBox[{"\[Not]", "p"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "q"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761891385107807*^9, 3.7618914045579195`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"63d06e0d-eda0-4a8f-949a-f45afd40e81a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.76189141260338*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"d8355634-450d-4293-94bc-397deb6b72a3"]
}, Closed]],

Cell["O bien :", "Text",
 CellChangeTimes->{{3.7618914367847633`*^9, 
  3.761891440185958*^9}},ExpressionUUID->"29a05c84-bef8-4181-a2ff-\
5eefffffb93a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"p", "\[Implies]", "q"}], ")"}], "\[Equivalent]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Not]", "q"}], ")"}], "\[Implies]", 
     RowBox[{"(", 
      RowBox[{"\[Not]", "p"}], ")"}]}], ")"}]}], "//", 
  "TautologyQ"}]], "Input",
 CellChangeTimes->{{3.761891426845195*^9, 3.7618914303043923`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"43a46d6f-39bb-4e0f-ae40-b8e4fd0ecad9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7618914330695505`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"b3ab4cd9-3e36-47ad-8e3b-fda51d51f14f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.10.", "Subsection",
 CellChangeTimes->{{3.76189147257281*^9, 3.7618914860445805`*^9}},
 FontSize->16,ExpressionUUID->"04446c09-66be-4c5f-8634-8215f9341508"],

Cell["\<\
Comprobar que la forma enunciativa p \[And] (q \[RightArrow] (~r)) implica l\
\[OAcute]gicamente a la forma enunciativa q \[RightArrow] (\[Tilde]r):\t\
\>", "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, 3.761891162846095*^9, {3.7618915417407665`*^9, 
   3.7618915979169793`*^9}, {3.7618916374682417`*^9, 3.7618916927484035`*^9}},
 
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"f00f865b-cc44-4ec1-a908-64bd5494e83b"],

Cell["Utilizando ahora el programa 6.1.", "Text",
 CellChangeTimes->{{3.761891909435797*^9, 
  3.761891917929283*^9}},ExpressionUUID->"c6d07a20-7902-43fb-9159-\
26efc05734b5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"p", "\[And]", 
      RowBox[{"(", 
       RowBox[{"q", "\[Implies]", 
        RowBox[{"(", 
         RowBox[{"\[Not]", "r"}], ")"}]}], ")"}]}], ")"}], "\[Implies]", 
    RowBox[{"(", 
     RowBox[{"q", "\[Implies]", 
      RowBox[{"(", 
       RowBox[{"\[Not]", "r"}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tautologia", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
       RowBox[{"tautologia", "=", "False"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{"tautologia", ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa es una tautolog\[IAcute]a\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa no es una tautolog\[IAcute]a\>\"", 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7618919226425524`*^9, 3.761892018962062*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"6094f094-d880-452e-b27b-cce715f07dad"],

Cell[BoxData["\<\"La forma enunciativa es una tautolog\[IAcute]a\"\>"], \
"Print",
 CellChangeTimes->{3.761892020123128*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[52]:=",ExpressionUUID->"bbf9c1ec-94f7-427c-95df-76eaa19e85ef"]
}, Closed]],

Cell["\<\
As\[IAcute], la forma enunciativa (p \[And] (q \[RightArrow] (~r))) \
\[RightArrow] (q \[RightArrow] (\[Tilde] r)) es una tautolog\[IAcute]a de lo \
que deducimos que p \[And] (q \[RightArrow] (~r)) implica l\[OAcute]gicamente \
a q \[RightArrow] (\[Tilde] r).\
\>", "Text",
 CellChangeTimes->{{3.7618920360720406`*^9, 
  3.761892124493098*^9}},ExpressionUUID->"e8fd52af-f4fa-48ed-9e8e-\
b5e983549f17"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["5. Argumentaciones v\[AAcute]lidas", "Section",
 CellChangeTimes->{{3.7616290667045193`*^9, 3.7616290847555513`*^9}, {
  3.76163527458959*^9, 3.7616352869952993`*^9}, {3.7618902279486217`*^9, 
  3.7618902392442675`*^9}, {3.76189107710019*^9, 3.7618910915480165`*^9}, {
  3.7618921692926598`*^9, 3.7618921769560986`*^9}},
 FontSize->18,
 FontColor->RGBColor[
  0.5686274509803921, 0., 
   0.],ExpressionUUID->"d5858e22-451a-48c9-945c-8fb276970c9d"],

Cell[CellGroupData[{

Cell["Ejemplo 6.11.", "Subsection",
 CellChangeTimes->{{3.76189147257281*^9, 3.7618914860445805`*^9}, 
   3.761892524539979*^9},
 FontSize->16,ExpressionUUID->"484f7fa3-92f5-452f-9f21-e2f4315eefb3"],

Cell[TextData[{
 "Estudiar la validez o invalidez de la siguiente argumentaci\[OAcute]n:\n    \
                        (p ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "48a2dba8-971a-4671-987d-5d843c599dfe"],
 " q) \[RightArrow] r, q ; \[Therefore] p \[RightArrow] r"
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, 3.761891162846095*^9, {3.7618915417407665`*^9, 
   3.7618915979169793`*^9}, {3.7618916374682417`*^9, 
   3.7618916927484035`*^9}, {3.7618925207357616`*^9, 3.7618925458852*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"5c6fb65f-ea68-42b8-8a81-df297edc7fa6"],

Cell["\<\
S\[OAcute]lo tenemos que ver si la forma enunciativa (((p\[Wedge]q)\
\[RightArrow]r)\[Wedge]q)\[Rule](p\[RightArrow]r) es una tautolog\[IAcute]a y \
usando el programa 6.1.:\
\>", "Text",
 CellChangeTimes->{{3.761892600205307*^9, 3.761892615261168*^9}},
 FontSize->14,ExpressionUUID->"fe364fb3-3734-4b7c-ae1d-ca01c4eef30a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", "\[And]", "q"}], ")"}], "\[Implies]", "r"}], ")"}], 
      "\[And]", "q"}], ")"}], "\[Implies]", 
    RowBox[{"(", 
     RowBox[{"p", "\[Implies]", "r"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tautologia", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
       RowBox[{"tautologia", "=", "False"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{"tautologia", ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa es una tautolog\[IAcute]a\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa no es una tautolog\[IAcute]a\>\"", 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.761892618386347*^9, 3.7618927291386814`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"30101b3c-375d-40a1-96a2-342619ee12cd"],

Cell[BoxData["\<\"La forma enunciativa es una tautolog\[IAcute]a\"\>"], \
"Print",
 CellChangeTimes->{3.7618927301567397`*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[58]:=",ExpressionUUID->"37839744-d851-4f10-ac13-5a36d4fbae47"]
}, Closed]],

Cell["Por tanto, la forma argumentativa es v\[AAcute]lida.", "Text",
 FontSize->14,ExpressionUUID->"861d030f-979b-40fb-9207-48fbf59fa95e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.12.", "Subsection",
 CellChangeTimes->{{3.76189147257281*^9, 3.7618914860445805`*^9}, 
   3.761892524539979*^9, 3.7618928118044095`*^9},
 FontSize->16,ExpressionUUID->"3f31a392-3e31-4c0a-9e2a-7ef7a6983262"],

Cell[TextData[{
 "Estudiar la validez o invalidez de la siguiente argumentaci\[OAcute]n:\n    \
                        (p ",
 Cell[BoxData[
  FormBox["\[Wedge]", TraditionalForm]],ExpressionUUID->
  "010c200f-0d3d-4820-b6c0-8d04c1bff652"],
 " q) \[RightArrow] r, p \[Or] q ; \[Therefore]  r"
}], "Text",
 CellChangeTimes->{{3.76138258271968*^9, 3.7613826652359266`*^9}, 
   3.761459316862403*^9, 3.761891162846095*^9, {3.7618915417407665`*^9, 
   3.7618915979169793`*^9}, {3.7618916374682417`*^9, 
   3.7618916927484035`*^9}, {3.7618925207357616`*^9, 3.7618925458852*^9}, {
   3.7618928321885757`*^9, 3.761892850252609*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"cb52ac79-fe19-4a8f-aff4-69f8ba055e1c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "p", "]"}]], "Input",
 CellChangeTimes->{{3.7618929901456103`*^9, 3.7618929940618343`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"5685d40a-fb48-4f7b-9f3c-559e97b4ca83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"expresion", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", "\[And]", "q"}], ")"}], "\[Implies]", "r"}], ")"}], 
      "\[And]", 
      RowBox[{"(", 
       RowBox[{"p", "\[Or]", "q"}], ")"}]}], ")"}], "\[Implies]", "r"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validez", "=", 
   RowBox[{
    RowBox[{"SatisfiabilityInstances", "[", 
     RowBox[{
      RowBox[{"\[Not]", "expresion"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "q", ",", "r"}], "}"}]}], "]"}], "\[Equal]", 
    RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", "validez"}], "Input",\

 CellChangeTimes->{{3.76189289136296*^9, 3.7618930187652473`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"c78c0358-5232-466a-ba5b-30435ab6bc53"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7618930201533265`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"0d39ad75-c006-4c71-98e8-4b113a753fcf"]
}, Closed]],

Cell["\<\
Si queremos que nos muestre la primera combinaci\[OAcute]n que hace que la \
forma argumentativa no sea v\[AAcute]lida lo hacemos mediante :\
\>", "Text",
 CellChangeTimes->{{3.7618962531702447`*^9, 
  3.7618962588335686`*^9}},ExpressionUUID->"731143e5-cbb4-45ec-8359-\
4db7f604d8b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SatisfiabilityInstances", "[", 
  RowBox[{
   RowBox[{"\[Not]", "expresion"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "q", ",", "r"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"336f026e-3d2d-442d-b3a8-6a7b2b1e7d24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False", ",", "False"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7618962786006994`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"27c6f34a-9031-4790-ae5b-dccc5bad347c"]
}, Closed]],

Cell["\<\
Luego cuando p toma valor verdadero y q y r toman valor falso se tiene que \
las dos premisas son verdaderas y la conclusi\[OAcute]n falsa, es decir, esta \
es una de las combinaciones que nos asegura que la argumentaci\[OAcute]n es \
inv\[AAcute]lida.\
\>", "Text",
 CellChangeTimes->{{3.7618963378060856`*^9, 
  3.7618963466975937`*^9}},ExpressionUUID->"ec917391-7e1c-4424-ae33-\
f307716a6380"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.13.", "Subsection",
 CellChangeTimes->{{3.7618963759642677`*^9, 3.761896376316288*^9}},
 FontSize->16,ExpressionUUID->"68f22693-ae14-4c4d-8b83-7406503d9c03"],

Cell[TextData[{
 "Cierta empresa necesita incrementar su plantilla con un nuevo miembro que \
pueda programar en ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " o que sepa programaci\[OAcute]n. Adem\[AAcute]s si sabe \
programaci\[OAcute]n entonces puede programar en ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". \[DownQuestion]Podemos deducir de lo anterior que dicha empresa necesita \
una persona que sepa utilizar el programa ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "?"
}], "Text",
 CellChangeTimes->{3.761896400494671*^9},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"a1a543ac-65bd-4002-ab8b-e183a2c66363"],

Cell[TextData[{
 "En realidad, este enunciado se puede estudiar a trav\[EAcute]s de una \
argumentaci\[OAcute]n con premisas ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "1"], TraditionalForm]],ExpressionUUID->
  "b1205fdc-7541-49b4-9341-0b683ca03259"],
 ": p ",
 Cell[BoxData[
  FormBox["\[Vee]", TraditionalForm]],ExpressionUUID->
  "b807744f-54fc-443b-a829-a1089271a373"],
 " q, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "2"], TraditionalForm]],ExpressionUUID->
  "42c4d099-fdb6-4ef6-89ac-672911ba3a50"],
 ": q \[RightArrow] p y conclusi\[OAcute]n A: p. La respuesta a la pregunta \
planteada ser\[AAcute] afirmativa si la argumentaci\[OAcute]n es valida y en \
otro caso ser\[AAcute] negativa. Usamos para dicho estudio la funci\[OAcute]n \
6.1.:"
}], "Text",
 CellChangeTimes->{{3.761896455772833*^9, 3.7618964713087215`*^9}},
 FontSize->14,ExpressionUUID->"48fc713f-5557-4855-8d0d-462446175cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Tautologia", "[", 
    RowBox[{"FormaE_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "j", ",", "f", ",", "resto"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tautologia", "=", "True"}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"False", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"f", "=", "n"}], ",", 
           RowBox[{"f", ">", "0"}], ",", 
           RowBox[{"f", "--"}], ",", 
           RowBox[{
            RowBox[{"resto", "=", 
             RowBox[{"Mod", "[", 
              RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"j", "=", 
             RowBox[{"Floor", "[", 
              RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"resto", "\[Equal]", "0"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], 
            ";"}]}], "]"}], ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
           RowBox[{
            RowBox[{"tautologia", "=", "False"}], ";", 
            RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], "\n", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{
           RowBox[{"2", "^", "n"}], "-", "1"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tautologia", "]"}], ";"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7616314620365243`*^9, 3.7616314620435247`*^9}, {
   3.7616317158640423`*^9, 3.7616317170591106`*^9}, {3.761631811419508*^9, 
   3.7616318126015754`*^9}, {3.7616337603499804`*^9, 
   3.7616337610170183`*^9}, {3.7620659369417686`*^9, 
   3.7620659606070104`*^9}, {3.7620660356119423`*^9, 3.762066037281145*^9}, 
   3.762066131764938*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"19bf8d09-05de-4c2b-9780-111df417b3ef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", 
    RowBox[{"{", 
     RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", "\[Or]", "q"}], ")"}], "\[And]", 
      RowBox[{"(", 
       RowBox[{"q", "\[Implies]", "p"}], ")"}]}], ")"}], "\[Implies]", 
    "p"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Tautologia", "[", 
  RowBox[{"FormaE", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7618965251007977`*^9, 3.7618965465730267`*^9}, {
  3.7618965897084937`*^9, 3.7618966389733114`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b7d02b72-2aa8-4a84-b71e-cc4cbf3e0991"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.761896639501342*^9, 3.7620669008650913`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"02983bfd-2c75-4f7d-97d3-96a33d6fd4f9"]
}, Closed]],

Cell[TextData[{
 "Por tanto, la forma argumentativa es v\[AAcute]lida y efectivamente la \
empresa necesita una persona que sepa utilizar el programa ",
 StyleBox["Mathematica.",
  FontSlant->"Italic"]
}], "Text",
 FontSize->14,ExpressionUUID->"a6135e5f-0246-4806-bfef-76a477662a90"]
}, Closed]],

Cell[CellGroupData[{

Cell["Ejemplo 6.14.", "Subsection",
 CellChangeTimes->{{3.761896660700554*^9, 3.761896663292702*^9}, 
   3.762061069701888*^9},
 FontSize->16,ExpressionUUID->"aa8e3525-6b2b-4a22-82c1-71a68908c35e"],

Cell["\<\
Escribe la siguiente argumentaci\[OAcute]n de forma simb\[OAcute]lica y \
estudia su validez usando el m\[EAcute]todo de refutaci\[OAcute]n: 
\[OpenCurlyDoubleQuote]Si no hay una tormenta de granizos o no hay una \
amenaza terrorista, entonces se correr\[AAcute] la etapa pr\[OAcute]logo del \
tour de Francia y se jugar\[AAcute] el partido de f\[UAcute]tbol inaugural de \
la Eurocopa. Si se corre la etapa pr\[OAcute]logo del tour de Francia \
entonces se entregar\[AAcute] el maillot amarillo al ganador de la etapa pr\
\[OAcute]logo. El maillot amarillo no se entregar\[AAcute] y en la primera \
etapa lo llevar\[AAcute] el ganador del tour del a\[NTilde]o pasado si y solo \
si no se corriera la etapa pr\[OAcute]logo del tour de Francia. Se sabe que \
finalmente en la primera etapa el maillot amarillo lo llevaba el ganador del \
tour del a\[NTilde]o pasado. Por tanto, hubo una tormenta de granizo o el \
partido de f\[UAcute]tbol inaugural de la Eurocopa no se jug\[OAcute].\
\[CloseCurlyDoubleQuote]
\
\>", "Text",
 CellChangeTimes->{
  3.761896675154381*^9, {3.762059552194092*^9, 3.762059557595401*^9}},
 FontSize->14,
 Background->RGBColor[
  1., 0.8470588235294118, 
   0.615686274509804],ExpressionUUID->"6fdcc7be-2c75-4c87-8867-d471256a9e8f"],

Cell["\<\
Como en ejercicios previos utilizaremos el programa 6.1., definiendo \
previamente las premisas y la conclusi\[OAcute]n de la forma argumentativa, \
para que as\[IAcute] la expresi\[OAcute]n a evaluar sea m\[AAcute]s \
f\[AAcute]cil de entender:\
\>", "Text",
 CellChangeTimes->{{3.7618968561097307`*^9, 3.761896864636218*^9}},
 FontSize->14,
 Background->None,ExpressionUUID->"35887b00-bf93-4b9b-9309-55ededece447"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Premisa1", "[", 
   RowBox[{"{", 
    RowBox[{
    "p1_", ",", "p2_", ",", "p3_", ",", "p4_", ",", "p5_", ",", "p6_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Not]", "p1"}], ")"}], "\[Or]", 
     RowBox[{"(", 
      RowBox[{"\[Not]", "p2"}], ")"}]}], ")"}], "\[Implies]", 
   RowBox[{"(", 
    RowBox[{"p3", "\[And]", "p4"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Premisa2", "[", 
   RowBox[{"{", 
    RowBox[{
    "p1_", ",", "p2_", ",", "p3_", ",", "p4_", ",", "p5_", ",", "p6_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"p3", "\[Implies]", "p5"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Premisa3", "[", 
   RowBox[{"{", 
    RowBox[{
    "p1_", ",", "p2_", ",", "p3_", ",", "p4_", ",", "p5_", ",", "p6_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Not]", "p5"}], ")"}], "\[And]", "p6"}], ")"}], 
   "\[Equivalent]", 
   RowBox[{"(", 
    RowBox[{"\[Not]", "p3"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Premisa4", "[", 
   RowBox[{"{", 
    RowBox[{
    "p1_", ",", "p2_", ",", "p3_", ",", "p4_", ",", "p5_", ",", "p6_"}], 
    "}"}], "]"}], ":=", "p6"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Conclusion", "[", 
   RowBox[{"{", 
    RowBox[{
    "p1_", ",", "p2_", ",", "p3_", ",", "p4_", ",", "p5_", ",", "p6_"}], 
    "}"}], "]"}], ":=", 
  RowBox[{"p1", "\[Or]", 
   RowBox[{"(", 
    RowBox[{"\[Not]", "p4"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FormaE", "[", "v_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Premisa1", "[", "v", "]"}], " ", "\[And]", 
      RowBox[{"Premisa2", "[", "v", "]"}], "\[And]", 
      RowBox[{"Premisa3", "[", "v", "]"}], "\[And]", 
      RowBox[{"Premisa4", "[", "v", "]"}]}], ")"}], "\[Implies]", 
    RowBox[{"Conclusion", "[", "v", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tautologia", "=", "True"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"False", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"2", "^", "n"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"f", "=", "n"}], ",", 
       RowBox[{"f", ">", "0"}], ",", 
       RowBox[{"f", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"resto", "=", 
         RowBox[{"Mod", "[", 
          RowBox[{"j", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"j", "=", 
         RowBox[{"Floor", "[", 
          RowBox[{"j", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"resto", "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "True"}], ",", 
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "f", "]"}], "]"}], "=", "False"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FormaE", "[", "p", "]"}], ",", "Null", ",", 
       RowBox[{"tautologia", "=", "False"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{"tautologia", ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa es una tautolog\[IAcute]a\>\"", 
    "]"}], ",", 
   RowBox[{
   "Print", "[", "\"\<La forma enunciativa no es una tautolog\[IAcute]a\>\"", 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.761896871084587*^9, 3.761897150946594*^9}, {
  3.7618971838774776`*^9, 3.7618971846745234`*^9}, {3.7618972361974707`*^9, 
  3.761897245957029*^9}, {3.7618972827891355`*^9, 3.761897341251479*^9}, {
  3.7620607024938855`*^9, 3.76206070327693*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d2d067df-2e33-4555-a605-f520476498c3"],

Cell[BoxData["\<\"La forma enunciativa no es una tautolog\[IAcute]a\"\>"], \
"Print",
 CellChangeTimes->{3.761897342642559*^9, 3.7618975783690414`*^9, 
  3.7618976303430147`*^9, 3.762060706456112*^9},
 CellLabel->
  "Durante la evaluaci\[OAcute]n de \
In[12]:=",ExpressionUUID->"31b95b29-7018-4c71-af4a-43a560cfe6a3"]
}, Closed]],

Cell["Por tanto, la forma argumentativa es inv\[AAcute]lida.", "Text",
 CellChangeTimes->{{3.762060761193243*^9, 3.7620607660675216`*^9}},
 FontWeight->"Plain",ExpressionUUID->"ca8474d7-2921-4f79-81d9-0e26fceec895"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["6. Ejercicios", "Section",
 CellChangeTimes->{{3.7616290667045193`*^9, 3.7616290847555513`*^9}, {
  3.76163527458959*^9, 3.7616352869952993`*^9}, {3.7618902279486217`*^9, 
  3.7618902392442675`*^9}, {3.76189107710019*^9, 3.7618910915480165`*^9}, {
  3.7618921692926598`*^9, 3.7618921769560986`*^9}, {3.762060784086552*^9, 
  3.7620607890298347`*^9}},
 FontSize->18,
 FontColor->RGBColor[
  0.5686274509803921, 0., 
   0.],ExpressionUUID->"53f6c500-43ec-4853-bd73-b17bbb6cdabf"],

Cell[CellGroupData[{

Cell["Ejercicio 6.27.", "Subsection",
 CellChangeTimes->{{3.761896660700554*^9, 3.761896663292702*^9}, {
  3.762061077654343*^9, 3.762061085653801*^9}},
 FontSize->16,ExpressionUUID->"936d868b-1953-41e9-8639-ed5060e23a91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Premisa1", "[", "v_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Not]", 
       RowBox[{"v", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[Or]", 
     RowBox[{"(", 
      RowBox[{"\[Not]", 
       RowBox[{"v", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ")"}], "\[Implies]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"v", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "\[And]", 
     RowBox[{"v", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.762059727241104*^9, 3.762059748200303*^9}, {
  3.762060028008307*^9, 3.7620600416390867`*^9}, {3.762062549523381*^9, 
  3.7620625657318096`*^9}},ExpressionUUID->"bb7679df-7e26-4649-8e8a-\
4925e0caa91b"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{960., 705.75},
WindowMargins->{{1914, Automatic}, {311.25, Automatic}},
FrontEndVersion->"12.1 para Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"7339d3ec-961e-4c0d-a692-1c75e980a2e0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 35667, 607, 93, "Department",ExpressionUUID->"e379467b-1a1c-49b6-807b-d096f97c8da7"],
Cell[CellGroupData[{
Cell[36250, 631, 24235, 417, 264, "Title",ExpressionUUID->"95ee4d40-3972-4ecb-8c7a-b989827ae643"],
Cell[CellGroupData[{
Cell[60510, 1052, 261, 5, 57, "Section",ExpressionUUID->"71705946-d136-4852-9b6b-10d6775b1668"],
Cell[CellGroupData[{
Cell[60796, 1061, 104, 1, 70, "Subsection",ExpressionUUID->"fef6c420-4ce0-4b4f-84c4-821f2a508ff0"],
Cell[60903, 1064, 1286, 36, 70, "Text",ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],
Cell[62192, 1102, 184, 2, 70, "Text",ExpressionUUID->"83036e15-6d62-43f0-bab7-b6d1af22efe0"],
Cell[CellGroupData[{
Cell[62401, 1108, 2546, 70, 70, "Input",ExpressionUUID->"64b632ce-84ea-4efa-80d1-7886a6645421"],
Cell[64950, 1180, 211, 4, 70, "Print",ExpressionUUID->"498f4f8c-0ccd-40b0-890f-ae8ebcf2e793"]
}, Open  ]],
Cell[65176, 1187, 223, 5, 70, "Text",ExpressionUUID->"05ceb308-4b49-420c-9775-be6306c5eba3"],
Cell[CellGroupData[{
Cell[65424, 1196, 2366, 69, 70, "Input",ExpressionUUID->"b3263cd0-0f7c-4f78-9a65-3f51e48836fc"],
Cell[67793, 1267, 190, 4, 70, "Print",ExpressionUUID->"c28b9831-34e4-4201-b7da-9f1b40bdcdeb"]
}, Open  ]],
Cell[67998, 1274, 183, 3, 70, "Text",ExpressionUUID->"339a1a45-1e8c-405a-985e-71bfdcc8efb8"],
Cell[CellGroupData[{
Cell[68206, 1281, 432, 13, 70, "Input",ExpressionUUID->"320215e6-4217-47c9-8928-e7f5082849d2"],
Cell[68641, 1296, 131, 2, 70, "Output",ExpressionUUID->"ff7cb9a1-1876-4f36-9bea-2a08d6176bac"]
}, Closed]],
Cell[68787, 1301, 213, 4, 70, "Text",ExpressionUUID->"a5fed0c4-4287-4612-b4d5-cf5120a64a72"],
Cell[CellGroupData[{
Cell[69025, 1309, 489, 15, 70, "Input",ExpressionUUID->"8ecd86c1-c005-474e-abb9-4041f5706a1f"],
Cell[69517, 1326, 136, 3, 70, "Output",ExpressionUUID->"0a8584b7-4251-47cf-82ad-cb712d463b47"]
}, Closed]],
Cell[69668, 1332, 324, 7, 70, "Text",ExpressionUUID->"17aece82-d0d7-4f80-92f5-3a16813560ad"]
}, Closed]],
Cell[CellGroupData[{
Cell[70029, 1344, 174, 2, 70, "Subsection",ExpressionUUID->"7847d439-a555-47f4-943d-7bf1e866f5c8"],
Cell[70206, 1348, 684, 15, 70, "Text",ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],
Cell[70893, 1365, 188, 3, 70, "Text",ExpressionUUID->"aefa9d5b-6fa0-4b3c-8189-b56a7c822071"],
Cell[71084, 1370, 559, 13, 70, "Input",ExpressionUUID->"7bedab6b-54f5-4a84-8c74-eb020d01d88d"],
Cell[71646, 1385, 184, 3, 70, "Text",ExpressionUUID->"f1505580-5b38-4e1c-9e93-66c7bd7ef03a"],
Cell[71833, 1390, 2536, 63, 70, "Input",ExpressionUUID->"2678e1b0-292a-44d4-99fb-fa4fe3b9a18a"],
Cell[74372, 1455, 2360, 60, 70, "Input",ExpressionUUID->"d943c856-1c6f-4c04-8d68-e63677eba573"],
Cell[76735, 1517, 244, 6, 70, "Text",ExpressionUUID->"2ef57d7c-a455-4128-b3c1-fca11921282e"],
Cell[CellGroupData[{
Cell[77004, 1527, 238, 4, 70, "Input",ExpressionUUID->"55eefee4-91ed-4a8e-80fc-ce22ae994184"],
Cell[77245, 1533, 328, 4, 70, "Output",ExpressionUUID->"ac522cc1-3ac2-446c-97e1-a5a19181b296"]
}, Closed]],
Cell[CellGroupData[{
Cell[77610, 1542, 294, 5, 70, "Input",ExpressionUUID->"6f15e925-ee09-43c7-aa14-adb4df57fa93"],
Cell[77907, 1549, 331, 5, 70, "Output",ExpressionUUID->"8527d13c-84c9-4cf8-a004-665a06e061ac"]
}, Closed]],
Cell[78253, 1557, 204, 3, 70, "Text",ExpressionUUID->"04efaafc-e25f-42e7-9a1f-2a2b47485eca"]
}, Closed]],
Cell[CellGroupData[{
Cell[78494, 1565, 227, 3, 70, "Subsection",ExpressionUUID->"ddf4fa26-45b4-47d9-b9b6-c192790bdb88"],
Cell[78724, 1570, 1853, 49, 70, "Text",ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],
Cell[80580, 1621, 312, 7, 70, "Text",ExpressionUUID->"e3428c1b-9841-4844-ba1c-64020b4e00d9"],
Cell[80895, 1630, 205, 3, 70, "Input",ExpressionUUID->"6ab0af0a-aa48-4ce7-bdf0-5435b348a071"],
Cell[CellGroupData[{
Cell[81125, 1637, 351, 8, 70, "Input",ExpressionUUID->"af2ac4b3-a0bf-46f6-b039-9f599ef277bf"],
Cell[81479, 1647, 253, 3, 70, "Output",ExpressionUUID->"8b5ddba0-4900-4e50-a81b-7ea2a6e4ec5c"]
}, Closed]],
Cell[81747, 1653, 530, 14, 70, "Text",ExpressionUUID->"42814df0-4bd5-4895-9f75-4792d7d1b9d5"],
Cell[CellGroupData[{
Cell[82302, 1671, 493, 12, 70, "Input",ExpressionUUID->"68a201c2-2497-4d65-ab0f-fee59fb6fdda"],
Cell[82798, 1685, 205, 3, 70, "Output",ExpressionUUID->"32db41b4-2ab2-47fd-9bff-aa49a3201e91"]
}, Closed]],
Cell[83018, 1691, 295, 6, 70, "Text",ExpressionUUID->"29b3e525-53ca-46d2-a433-83a95e49f853"],
Cell[CellGroupData[{
Cell[83338, 1701, 444, 10, 70, "Input",ExpressionUUID->"55c309ea-5f32-42d9-b4b2-df20fab0c424"],
Cell[83785, 1713, 202, 3, 70, "Output",ExpressionUUID->"6daea5e9-b56d-4cab-8026-00ef10909752"]
}, Closed]],
Cell[84002, 1719, 1189, 35, 70, "Text",ExpressionUUID->"a9d39edf-fc96-465c-b312-2fde55bbd18e"],
Cell[CellGroupData[{
Cell[85216, 1758, 524, 13, 70, "Input",ExpressionUUID->"1d98107d-1ae6-44c6-b6fe-a8b28e28b7c2"],
Cell[85743, 1773, 178, 2, 70, "Output",ExpressionUUID->"72769a32-c90d-42c2-bc68-9b05464f4d2a"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[85982, 1782, 284, 6, 43, "Section",ExpressionUUID->"71705946-d136-4852-9b6b-10d6775b1668"],
Cell[CellGroupData[{
Cell[86291, 1792, 170, 2, 70, "Subsection",ExpressionUUID->"d4ed06d2-b16e-42cb-922c-4d89e9cddd38"],
Cell[86464, 1796, 933, 26, 70, "Text",ExpressionUUID->"130dedb1-62fa-469a-a454-8035655b117f"],
Cell[CellGroupData[{
Cell[87422, 1826, 7721, 181, 70, "Input",ExpressionUUID->"88123363-34d1-4e7d-9685-be6debe8f467"],
Cell[CellGroupData[{
Cell[95168, 2011, 830, 16, 70, "Print",ExpressionUUID->"850c6894-4e85-4603-9197-9c52c948b8d1"],
Cell[96001, 2029, 668, 14, 70, "Print",ExpressionUUID->"f6caf9f8-5c64-421c-bbd3-fbd7a1a6d443"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[96730, 2050, 146, 2, 70, "Subsection",ExpressionUUID->"686231c7-4844-447f-8fd1-0081aec171c7"],
Cell[96879, 2054, 685, 15, 70, "Text",ExpressionUUID->"ec8b1b48-074a-4507-93ab-b7fa63df9557"],
Cell[97567, 2071, 202, 2, 70, "Text",ExpressionUUID->"f7fbddc0-0913-4823-a8ad-cd593347978e"],
Cell[97772, 2075, 8977, 194, 70, "Input",ExpressionUUID->"40e8d109-b349-4a1d-af88-b5231c9c7ada"],
Cell[106752, 2271, 266, 6, 70, "Text",ExpressionUUID->"94c9e104-468e-4ea5-8f5d-e6a879712fe7"],
Cell[CellGroupData[{
Cell[107043, 2281, 567, 15, 70, "Input",ExpressionUUID->"382aa014-6f93-40b8-bfc2-2495b3fd431e"],
Cell[CellGroupData[{
Cell[107635, 2300, 546, 12, 70, "Print",ExpressionUUID->"0f6ed689-7241-48a3-90de-2b60026134d4"],
Cell[108184, 2314, 794, 15, 70, "Print",ExpressionUUID->"43b0e5cd-b021-4638-bdd8-23f3f763bd9b"]
}, Open  ]]
}, Closed]],
Cell[109005, 2333, 364, 7, 70, "Text",ExpressionUUID->"1d0c66c2-cdd7-4ff0-ae3e-27a978e4e5ef"]
}, Closed]],
Cell[CellGroupData[{
Cell[109406, 2345, 170, 2, 70, "Subsection",ExpressionUUID->"9d539de0-ede8-4e47-bcc9-a717da85ab8c"],
Cell[109579, 2349, 1080, 27, 70, "Text",ExpressionUUID->"8f9ab794-6b53-4872-bbcb-79c5f6a08c2e"],
Cell[CellGroupData[{
Cell[110684, 2380, 305, 6, 70, "Input",ExpressionUUID->"981a9b82-0505-4bb5-a37b-8bc0ef10f8e8"],
Cell[110992, 2388, 405, 12, 70, "Output",ExpressionUUID->"e77b5676-9964-4f63-8e1b-3f8bc249301f"]
}, Closed]],
Cell[111412, 2403, 242, 6, 70, "Text",ExpressionUUID->"d800cfcf-a39e-4ed0-8cbc-35ba162ea425"],
Cell[111657, 2411, 457, 8, 70, "Text",ExpressionUUID->"d77c06c8-f803-4b78-a52f-aa8b50ce5a21"],
Cell[CellGroupData[{
Cell[112139, 2423, 356, 8, 70, "Input",ExpressionUUID->"400a3faa-424f-4fd8-9134-5fda9ebe6a67"],
Cell[112498, 2433, 425, 13, 70, "Output",ExpressionUUID->"123d289f-4922-46f8-81dd-6809e201dcb9"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112972, 2452, 197, 3, 70, "Subsection",ExpressionUUID->"585c642a-8d23-491e-9529-2f132809a72e"],
Cell[113172, 2457, 942, 23, 70, "Text",ExpressionUUID->"548cc647-5ac2-4748-af52-fc900c3ebe51"],
Cell[114117, 2482, 226, 4, 70, "Text",ExpressionUUID->"7e919543-acdb-458c-8983-b58096229199"],
Cell[CellGroupData[{
Cell[114368, 2490, 7330, 174, 70, "Input",ExpressionUUID->"4d4c6f3c-9127-45aa-88a0-dffa83cf7151"],
Cell[CellGroupData[{
Cell[121723, 2668, 566, 12, 70, "Print",ExpressionUUID->"08ed6390-9880-4af8-a6d3-0c04693160ff"],
Cell[122292, 2682, 462, 11, 70, "Print",ExpressionUUID->"f0406ded-c405-4797-999a-16e6e647b63a"]
}, Open  ]]
}, Closed]],
Cell[122781, 2697, 593, 17, 70, "Text",ExpressionUUID->"1fc8bde1-72ce-4a63-9efb-f6997ba7481d"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[123423, 2720, 355, 7, 43, "Section",ExpressionUUID->"6c329cce-828f-447c-a12d-7ab51d761207"],
Cell[CellGroupData[{
Cell[123803, 2731, 148, 2, 70, "Subsection",ExpressionUUID->"da34868d-b43b-4779-868a-534a9864403b"],
Cell[123954, 2735, 904, 16, 70, "Text",ExpressionUUID->"6ead169f-5268-4778-a924-b4a0671dd806"],
Cell[124861, 2753, 277, 6, 70, "Text",ExpressionUUID->"0cb39941-0987-43ff-9899-9a84b62f8bc5"],
Cell[125141, 2761, 204, 3, 70, "Input",ExpressionUUID->"3dd886c6-e51d-4c33-a5d7-e08dc7f1547c"],
Cell[CellGroupData[{
Cell[125370, 2768, 389, 9, 70, "Input",ExpressionUUID->"30121c6a-3235-4e23-9f44-17099fe37175"],
Cell[125762, 2779, 355, 10, 70, "Output",ExpressionUUID->"6a91fd6f-d434-48f4-90f5-04e52247101b"]
}, Closed]],
Cell[126132, 2792, 281, 6, 70, "Text",ExpressionUUID->"8509dfc5-ab72-4919-a2d2-bbd74f7f9ab0"],
Cell[CellGroupData[{
Cell[126438, 2802, 396, 10, 70, "Input",ExpressionUUID->"84ce59db-d317-4882-aec7-76b15bda0a7e"],
Cell[126837, 2814, 440, 13, 70, "Output",ExpressionUUID->"6e37ac78-7eee-41ec-82bd-76aa4b1a720d"]
}, Closed]],
Cell[127292, 2830, 274, 6, 70, "Text",ExpressionUUID->"492975a7-e36c-4ed1-bff1-f62d0af83292"],
Cell[CellGroupData[{
Cell[127591, 2840, 420, 11, 70, "Input",ExpressionUUID->"556f9730-4ef4-457a-8cae-472169f02540"],
Cell[128014, 2853, 250, 6, 70, "Output",ExpressionUUID->"bbc1c1a0-4116-4ac0-a280-1d52d7b63bd8"]
}, Closed]],
Cell[128279, 2862, 295, 6, 70, "Text",ExpressionUUID->"0c62e489-7f9d-4a28-8335-2e572056bc09"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128623, 2874, 432, 8, 43, "Section",ExpressionUUID->"132f11c6-0070-4044-97be-f0490ec1d8f0"],
Cell[CellGroupData[{
Cell[129080, 2886, 145, 2, 70, "Subsection",ExpressionUUID->"c14e48e3-3a6e-49e2-9be2-b4ac7b041f95"],
Cell[129228, 2890, 404, 10, 70, "Text",ExpressionUUID->"94ced1a7-7958-44e5-b8bd-df3c18c5797d"],
Cell[129635, 2902, 273, 6, 70, "Text",ExpressionUUID->"b7e180aa-4203-4213-a74f-9e5b66d0f513"],
Cell[129911, 2910, 2536, 63, 70, "Input",ExpressionUUID->"f03b02fa-a508-4e1d-a81d-dd35cfe09139"],
Cell[CellGroupData[{
Cell[132472, 2977, 662, 19, 70, "Input",ExpressionUUID->"832c085b-ca09-41c0-a9fa-beb9282955c4"],
Cell[133137, 2998, 175, 2, 70, "Output",ExpressionUUID->"9af05abc-9a93-4b37-8c97-f17bafe1b304"]
}, Closed]],
Cell[133327, 3003, 335, 6, 70, "Text",ExpressionUUID->"59743a71-7dd0-4d62-ac2a-34999129a7b8"],
Cell[133665, 3011, 275, 6, 70, "Text",ExpressionUUID->"a67c5509-2817-42cd-a0b1-32057305bcde"],
Cell[CellGroupData[{
Cell[133965, 3021, 548, 15, 70, "Input",ExpressionUUID->"63d06e0d-eda0-4a8f-949a-f45afd40e81a"],
Cell[134516, 3038, 151, 2, 70, "Output",ExpressionUUID->"d8355634-450d-4293-94bc-397deb6b72a3"]
}, Closed]],
Cell[134682, 3043, 152, 3, 70, "Text",ExpressionUUID->"29a05c84-bef8-4181-a2ff-5eefffffb93a"],
Cell[CellGroupData[{
Cell[134859, 3050, 466, 13, 70, "Input",ExpressionUUID->"43a46d6f-39bb-4e0f-ae40-b8e4fd0ecad9"],
Cell[135328, 3065, 154, 2, 70, "Output",ExpressionUUID->"b3ab4cd9-3e36-47ad-8e3b-fda51d51f14f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[135531, 3073, 172, 2, 70, "Subsection",ExpressionUUID->"04446c09-66be-4c5f-8634-8215f9341508"],
Cell[135706, 3077, 538, 11, 70, "Text",ExpressionUUID->"f00f865b-cc44-4ec1-a908-64bd5494e83b"],
Cell[136247, 3090, 175, 3, 70, "Text",ExpressionUUID->"c6d07a20-7902-43fb-9159-26efc05734b5"],
Cell[CellGroupData[{
Cell[136447, 3097, 2573, 73, 70, "Input",ExpressionUUID->"6094f094-d880-452e-b27b-cce715f07dad"],
Cell[139023, 3172, 241, 5, 70, "Print",ExpressionUUID->"bbf9c1ec-94f7-427c-95df-76eaa19e85ef"]
}, Closed]],
Cell[139279, 3180, 412, 8, 70, "Text",ExpressionUUID->"e8fd52af-f4fa-48ed-9e8e-b5e983549f17"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[139740, 3194, 453, 8, 43, "Section",ExpressionUUID->"d5858e22-451a-48c9-945c-8fb276970c9d"],
Cell[CellGroupData[{
Cell[140218, 3206, 198, 3, 70, "Subsection",ExpressionUUID->"484f7fa3-92f5-452f-9f21-e2f4315eefb3"],
Cell[140419, 3211, 723, 15, 70, "Text",ExpressionUUID->"5c6fb65f-ea68-42b8-8a81-df297edc7fa6"],
Cell[141145, 3228, 333, 6, 70, "Text",ExpressionUUID->"fe364fb3-3734-4b7c-ae1d-ca01c4eef30a"],
Cell[CellGroupData[{
Cell[141503, 3238, 2510, 71, 70, "Input",ExpressionUUID->"30101b3c-375d-40a1-96a2-342619ee12cd"],
Cell[144016, 3311, 243, 5, 70, "Print",ExpressionUUID->"37839744-d851-4f10-ac13-5a36d4fbae47"]
}, Closed]],
Cell[144274, 3319, 138, 1, 70, "Text",ExpressionUUID->"861d030f-979b-40fb-9207-48fbf59fa95e"]
}, Closed]],
Cell[CellGroupData[{
Cell[144449, 3325, 222, 3, 70, "Subsection",ExpressionUUID->"3f31a392-3e31-4c0a-9e2a-7ef7a6983262"],
Cell[144674, 3330, 768, 16, 70, "Text",ExpressionUUID->"cb52ac79-fe19-4a8f-aff4-69f8ba055e1c"],
Cell[145445, 3348, 207, 3, 70, "Input",ExpressionUUID->"5685d40a-fb48-4f7b-9f3c-559e97b4ca83"],
Cell[CellGroupData[{
Cell[145677, 3355, 849, 25, 70, "Input",ExpressionUUID->"c78c0358-5232-466a-ba5b-30435ab6bc53"],
Cell[146529, 3382, 155, 2, 70, "Output",ExpressionUUID->"0d39ad75-c006-4c71-98e8-4b113a753fcf"]
}, Closed]],
Cell[146699, 3387, 294, 6, 70, "Text",ExpressionUUID->"731143e5-cbb4-45ec-8359-4db7f604d8b4"],
Cell[CellGroupData[{
Cell[147018, 3397, 269, 6, 70, "Input",ExpressionUUID->"336f026e-3d2d-442d-b3a8-6a7b2b1e7d24"],
Cell[147290, 3405, 241, 5, 70, "Output",ExpressionUUID->"27c6f34a-9031-4790-ae5b-dccc5bad347c"]
}, Closed]],
Cell[147546, 3413, 406, 8, 70, "Text",ExpressionUUID->"ec917391-7e1c-4424-ae33-f307716a6380"]
}, Closed]],
Cell[CellGroupData[{
Cell[147989, 3426, 173, 2, 70, "Subsection",ExpressionUUID->"68f22693-ae14-4c4d-8b83-7406503d9c03"],
Cell[148165, 3430, 701, 19, 70, "Text",ExpressionUUID->"a1a543ac-65bd-4002-ab8b-e183a2c66363"],
Cell[148869, 3451, 914, 22, 70, "Text",ExpressionUUID->"48fc713f-5557-4855-8d0d-462446175cfd"],
Cell[149786, 3475, 2536, 63, 70, "Input",ExpressionUUID->"19bf8d09-05de-4c2b-9780-111df417b3ef"],
Cell[CellGroupData[{
Cell[152347, 3542, 668, 18, 70, "Input",ExpressionUUID->"b7d02b72-2aa8-4a84-b71e-cc4cbf3e0991"],
Cell[153018, 3562, 176, 2, 70, "Output",ExpressionUUID->"02983bfd-2c75-4f7d-97d3-96a33d6fd4f9"]
}, Closed]],
Cell[153209, 3567, 283, 6, 70, "Text",ExpressionUUID->"a6135e5f-0246-4806-bfef-76a477662a90"]
}, Closed]],
Cell[CellGroupData[{
Cell[153529, 3578, 197, 3, 70, "Subsection",ExpressionUUID->"aa8e3525-6b2b-4a22-82c1-71a68908c35e"],
Cell[153729, 3583, 1268, 22, 70, "Text",ExpressionUUID->"6fdcc7be-2c75-4c87-8867-d471256a9e8f"],
Cell[155000, 3607, 426, 8, 70, "Text",ExpressionUUID->"35887b00-bf93-4b9b-9309-55ededece447"],
Cell[CellGroupData[{
Cell[155451, 3619, 4246, 121, 70, "Input",ExpressionUUID->"d2d067df-2e33-4555-a605-f520476498c3"],
Cell[159700, 3742, 317, 6, 70, "Print",ExpressionUUID->"31b95b29-7018-4c71-af4a-43a560cfe6a3"]
}, Closed]],
Cell[160032, 3751, 215, 2, 70, "Text",ExpressionUUID->"ca8474d7-2921-4f79-81d9-0e26fceec895"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160296, 3759, 483, 9, 43, "Section",ExpressionUUID->"53f6c500-43ec-4853-bd73-b17bbb6cdabf"],
Cell[CellGroupData[{
Cell[160804, 3772, 222, 3, 70, "Subsection",ExpressionUUID->"936d868b-1953-41e9-8639-ed5060e23a91"],
Cell[161029, 3777, 796, 23, 70, "Input",ExpressionUUID->"bb7679df-7e26-4649-8e8a-4925e0caa91b"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

